ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp"
  20              		.section	.text.HAL_MspInit,"ax",%progbits
  21              		.align	1
  22              		.weak	HAL_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_MspInit:
  28              		.fnstart
  29              	.LFB237:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @file    stm32f4xx_hal.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief   HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   ******************************************************************************
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @attention
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * Copyright (c) 2017 STMicroelectronics.
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * All rights reserved.
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * in the root directory of this software component.
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   ******************************************************************************
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   @verbatim
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   ==============================================================================
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****                      ##### How to use this driver #####
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   ==============================================================================
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     [..]
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     The HAL contains two APIs' categories: 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****          (+) Common HAL APIs
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****          (+) Services HAL APIs
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 2


  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   @endverbatim
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   ******************************************************************************
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */ 
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #include "stm32f4xx_hal.h"
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /** @addtogroup STM32F4xx_HAL_Driver
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @{
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /** @defgroup HAL HAL
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief HAL module driver.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @{
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @{
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief STM32F4xx HAL Driver version number V1.8.1
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define __STM32F4xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define __STM32F4xx_HAL_VERSION_SUB1   (0x08U) /*!< [23:16] sub1 version */
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define __STM32F4xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define __STM32F4xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define __STM32F4xx_HAL_VERSION         ((__STM32F4xx_HAL_VERSION_MAIN << 24U)\
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****                                         |(__STM32F4xx_HAL_VERSION_SUB1 << 16U)\
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****                                         |(__STM32F4xx_HAL_VERSION_SUB2 << 8U )\
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****                                         |(__STM32F4xx_HAL_VERSION_RC))
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****                                         
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define IDCODE_DEVID_MASK    0x00000FFFU
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* ------------ RCC registers bit address in the alias region ----------- */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* ---  MEMRMP Register ---*/ 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Alias word address of UFB_MODE bit */ 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define UFB_MODE_BIT_NUMBER       SYSCFG_MEMRMP_UFB_MODE_Pos
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define UFB_MODE_BB               (uint32_t)(PERIPH_BB_BASE + (MEMRMP_OFFSET * 32U) + (UFB_MODE_BIT
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* ---  CMPCR Register ---*/ 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Alias word address of CMP_PD bit */ 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20U) 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define CMP_PD_BIT_NUMBER         SYSCFG_CMPCR_CMP_PD_Pos
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define CMPCR_CMP_PD_BB           (uint32_t)(PERIPH_BB_BASE + (CMPCR_OFFSET * 32U) + (CMP_PD_BIT_NU
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* ---  MCHDLYCR Register ---*/ 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Alias word address of BSCKSEL bit */ 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define MCHDLYCR_OFFSET            (SYSCFG_OFFSET + 0x30U) 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define BSCKSEL_BIT_NUMBER         SYSCFG_MCHDLYCR_BSCKSEL_Pos
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #define MCHDLYCR_BSCKSEL_BB        (uint32_t)(PERIPH_BB_BASE + (MCHDLYCR_OFFSET * 32U) + (BSCKSEL_B
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @}
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 3


  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Private macro -------------------------------------------------------------*/
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Private variables ---------------------------------------------------------*/
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /** @addtogroup HAL_Private_Variables
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @{
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __IO uint32_t uwTick;
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @}
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Private function prototypes -----------------------------------------------*/
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /* Private functions ---------------------------------------------------------*/
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @{
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  *  @brief    Initialization and de-initialization functions
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  *
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** @verbatim    
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  ===============================================================================
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****               ##### Initialization and Configuration functions #####
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  ===============================================================================
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     [..]  This section provides functions allowing to:
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****           configuration. It initializes the systick also when timeout is needed 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****           and the backup domain when enabled.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) De-Initializes common part of the HAL.
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****           Tick interrupt priority. 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****         (++) SysTick timer is used by default as source of time base, but user
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              can eventually implement his proper time base source (a general purpose 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              timer for example or other time source), keeping in mind that Time base 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              handled in milliseconds basis.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              at the beginning of the program after reset by HAL_Init() or at any time 
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****         (++) Source of time base is configured  to generate interrupts at regular 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****             ISR process will be blocked. 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****        (++) functions affecting time base configurations are declared as __weak  
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****              to make  override possible  in case of other  implementations in user file.
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** @endverbatim
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @{
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *         instruction to be executed in the main program (before to call any other
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *         HAL function), it performs the following:
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 4


 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *           Configure the Flash prefetch, instruction and Data caches.
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *           Set NVIC Group Priority to 4.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *           Calls the HAL_MspInit() callback function defined in user file 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *           "stm32f4xx_hal_msp.c" to do the global low level hardware initialization 
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *            
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *         to have correct HAL operation.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval HAL status
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** HAL_StatusTypeDef HAL_Init(void)
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #if (INSTRUCTION_CACHE_ENABLE != 0U)
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #endif /* INSTRUCTION_CACHE_ENABLE */
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #if (DATA_CACHE_ENABLE != 0U)
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_FLASH_DATA_CACHE_ENABLE();
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #endif /* DATA_CACHE_ENABLE */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #if (PREFETCH_ENABLE != 0U)
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Init the low level hardware */
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   HAL_MspInit();
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Return function status */
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return HAL_OK;
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *         This function is optional.   
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval HAL status
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** HAL_StatusTypeDef HAL_DeInit(void)
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Reset of all peripherals */
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_APB1_FORCE_RESET();
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_APB1_RELEASE_RESET();
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_APB2_FORCE_RESET();
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_APB2_RELEASE_RESET();
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB1_FORCE_RESET();
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB1_RELEASE_RESET();
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 5


 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB2_FORCE_RESET();
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB2_RELEASE_RESET();
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB3_FORCE_RESET();
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB3_RELEASE_RESET();
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* De-Init the low level hardware */
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   HAL_MspDeInit();
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Return function status */
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return HAL_OK;
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Initialize the MSP.
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak void HAL_MspInit(void)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
  30              		.loc 1 220 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* NOTE : This function should not be modified, when the callback is needed,
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****             the HAL_MspInit could be implemented in the user file
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****    */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
  35              		.loc 1 224 1 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE237:
  39              		.cantunwind
  40              		.fnend
  42              		.section	.text.HAL_MspDeInit,"ax",%progbits
  43              		.align	1
  44              		.weak	HAL_MspDeInit
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HAL_MspDeInit:
  50              		.fnstart
  51              	.LFB238:
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  DeInitializes the MSP.
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak void HAL_MspDeInit(void)
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
  52              		.loc 1 231 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 6


 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****             the HAL_MspDeInit could be implemented in the user file
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****    */ 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
  57              		.loc 1 235 1 is_stmt 0 view .LVU3
  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE238:
  61              		.cantunwind
  62              		.fnend
  64              		.section	.text.HAL_DeInit,"ax",%progbits
  65              		.align	1
  66              		.global	HAL_DeInit
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	HAL_DeInit:
  72              		.fnstart
  73              	.LFB236:
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Reset of all peripherals */
  74              		.loc 1 191 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 10B5     		push	{r4, lr}
  79              		.save {r4, lr}
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
  83              		.cfi_offset 14, -4
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_APB1_RELEASE_RESET();
  84              		.loc 1 193 3 view .LVU5
  85 0002 094B     		ldr	r3, .L5
  86 0004 4FF0FF32 		mov	r2, #-1
  87 0008 1A62     		str	r2, [r3, #32]
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  88              		.loc 1 194 3 view .LVU6
  89 000a 0024     		movs	r4, #0
  90 000c 1C62     		str	r4, [r3, #32]
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_APB2_RELEASE_RESET();
  91              		.loc 1 196 3 view .LVU7
  92 000e 5A62     		str	r2, [r3, #36]
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  93              		.loc 1 197 3 view .LVU8
  94 0010 5C62     		str	r4, [r3, #36]
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB1_RELEASE_RESET();
  95              		.loc 1 199 3 view .LVU9
  96 0012 1A61     		str	r2, [r3, #16]
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
  97              		.loc 1 200 3 view .LVU10
  98 0014 1C61     		str	r4, [r3, #16]
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB2_RELEASE_RESET();
  99              		.loc 1 202 3 view .LVU11
 100 0016 5A61     		str	r2, [r3, #20]
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 101              		.loc 1 203 3 view .LVU12
 102 0018 5C61     		str	r4, [r3, #20]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   __HAL_RCC_AHB3_RELEASE_RESET();
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 7


 103              		.loc 1 205 3 view .LVU13
 104 001a 9A61     		str	r2, [r3, #24]
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 105              		.loc 1 206 3 view .LVU14
 106 001c 9C61     		str	r4, [r3, #24]
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     
 107              		.loc 1 209 3 view .LVU15
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     
 108              		.loc 1 209 16 is_stmt 0 view .LVU16
 109 001e FFF7FEFF 		bl	HAL_MspDeInit
 110              	.LVL0:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 111              		.loc 1 212 3 is_stmt 1 view .LVU17
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 112              		.loc 1 213 1 is_stmt 0 view .LVU18
 113 0022 2046     		mov	r0, r4
 114 0024 10BD     		pop	{r4, pc}
 115              	.L6:
 116 0026 00BF     		.align	2
 117              	.L5:
 118 0028 00380240 		.word	1073887232
 119              		.cfi_endproc
 120              	.LFE236:
 121              		.fnend
 123              		.section	.text.HAL_InitTick,"ax",%progbits
 124              		.align	1
 125              		.weak	HAL_InitTick
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	HAL_InitTick:
 131              		.fnstart
 132              	.LVL1:
 133              	.LFB239:
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief This function configures the source of the time base.
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *        The time source is configured  to have 1ms time base with a dedicated 
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *        Tick interrupt priority.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note This function is called  automatically at the beginning of program after
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note In the default implementation, SysTick timer is the source of time base. 
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       It is used to generate interrupts at regular time intervals. 
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       The SysTick interrupt must have higher priority (numerically lower)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       The function is declared as __weak  to be overwritten  in case of other
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       implementation  in user file.
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @param TickPriority Tick interrupt priority.
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval HAL status
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 134              		.loc 1 254 1 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 8


 138              		.loc 1 254 1 is_stmt 0 view .LVU20
 139 0000 10B5     		push	{r4, lr}
 140              		.save {r4, lr}
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 145 0002 0446     		mov	r4, r0
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 146              		.loc 1 256 3 is_stmt 1 view .LVU21
 147              		.loc 1 256 53 is_stmt 0 view .LVU22
 148 0004 0E4B     		ldr	r3, .L13
 149 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 150              		.loc 1 256 51 view .LVU23
 151 0008 4FF47A73 		mov	r3, #1000
 152 000c B3FBF2F3 		udiv	r3, r3, r2
 153              		.loc 1 256 25 view .LVU24
 154 0010 0C4A     		ldr	r2, .L13+4
 155 0012 1068     		ldr	r0, [r2]
 156              	.LVL2:
 157              		.loc 1 256 25 view .LVU25
 158 0014 B0FBF3F0 		udiv	r0, r0, r3
 159 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 160              	.LVL3:
 161              		.loc 1 256 3 view .LVU26
 162 001c 68B9     		cbnz	r0, .L9
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   {
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     return HAL_ERROR;
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Configure the SysTick IRQ priority */
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 163              		.loc 1 262 3 is_stmt 1 view .LVU27
 164 001e 0F2C     		cmp	r4, #15
 165 0020 01D9     		bls	.L12
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   {
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     uwTickPrio = TickPriority;
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   else
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   {
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     return HAL_ERROR;
 166              		.loc 1 269 12 is_stmt 0 view .LVU28
 167 0022 0120     		movs	r0, #1
 168 0024 0AE0     		b	.L8
 169              	.L12:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     uwTickPrio = TickPriority;
 170              		.loc 1 264 5 is_stmt 1 view .LVU29
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     uwTickPrio = TickPriority;
 171              		.loc 1 264 25 is_stmt 0 view .LVU30
 172 0026 0022     		movs	r2, #0
 173 0028 2146     		mov	r1, r4
 174 002a 4FF0FF30 		mov	r0, #-1
 175 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 176              	.LVL4:
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 9


 177              		.loc 1 265 5 is_stmt 1 view .LVU31
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 178              		.loc 1 265 16 is_stmt 0 view .LVU32
 179 0032 054B     		ldr	r3, .L13+8
 180 0034 1C60     		str	r4, [r3]
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Return function status */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return HAL_OK;
 181              		.loc 1 273 3 is_stmt 1 view .LVU33
 182              		.loc 1 273 10 is_stmt 0 view .LVU34
 183 0036 0020     		movs	r0, #0
 184 0038 00E0     		b	.L8
 185              	.L9:
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 186              		.loc 1 258 12 view .LVU35
 187 003a 0120     		movs	r0, #1
 188              	.L8:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 189              		.loc 1 274 1 view .LVU36
 190 003c 10BD     		pop	{r4, pc}
 191              	.LVL5:
 192              	.L14:
 193              		.loc 1 274 1 view .LVU37
 194 003e 00BF     		.align	2
 195              	.L13:
 196 0040 00000000 		.word	uwTickFreq
 197 0044 00000000 		.word	SystemCoreClock
 198 0048 00000000 		.word	uwTickPrio
 199              		.cfi_endproc
 200              	.LFE239:
 201              		.fnend
 203              		.section	.text.HAL_Init,"ax",%progbits
 204              		.align	1
 205              		.global	HAL_Init
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 210              	HAL_Init:
 211              		.fnstart
 212              	.LFB235:
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 213              		.loc 1 158 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              		.save {r3, lr}
 219              	.LCFI2:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 3, -8
 222              		.cfi_offset 14, -4
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #endif /* INSTRUCTION_CACHE_ENABLE */
 223              		.loc 1 161 3 view .LVU39
 224 0002 0B4B     		ldr	r3, .L17
 225 0004 1A68     		ldr	r2, [r3]
 226 0006 42F40072 		orr	r2, r2, #512
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 10


 227 000a 1A60     		str	r2, [r3]
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #endif /* DATA_CACHE_ENABLE */
 228              		.loc 1 165 3 view .LVU40
 229 000c 1A68     		ldr	r2, [r3]
 230 000e 42F48062 		orr	r2, r2, #1024
 231 0012 1A60     		str	r2, [r3]
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** #endif /* PREFETCH_ENABLE */
 232              		.loc 1 169 3 view .LVU41
 233 0014 1A68     		ldr	r2, [r3]
 234 0016 42F48072 		orr	r2, r2, #256
 235 001a 1A60     		str	r2, [r3]
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 236              		.loc 1 173 3 view .LVU42
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 237              		.loc 1 173 31 is_stmt 0 view .LVU43
 238 001c 0320     		movs	r0, #3
 239 001e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 240              	.LVL6:
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 241              		.loc 1 176 3 is_stmt 1 view .LVU44
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 242              		.loc 1 176 15 is_stmt 0 view .LVU45
 243 0022 0F20     		movs	r0, #15
 244 0024 FFF7FEFF 		bl	HAL_InitTick
 245              	.LVL7:
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 246              		.loc 1 179 3 is_stmt 1 view .LVU46
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 247              		.loc 1 179 14 is_stmt 0 view .LVU47
 248 0028 FFF7FEFF 		bl	HAL_MspInit
 249              	.LVL8:
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 250              		.loc 1 182 3 is_stmt 1 view .LVU48
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 251              		.loc 1 183 1 is_stmt 0 view .LVU49
 252 002c 0020     		movs	r0, #0
 253 002e 08BD     		pop	{r3, pc}
 254              	.L18:
 255              		.align	2
 256              	.L17:
 257 0030 003C0240 		.word	1073888256
 258              		.cfi_endproc
 259              	.LFE235:
 260              		.fnend
 262              		.section	.text.HAL_IncTick,"ax",%progbits
 263              		.align	1
 264              		.weak	HAL_IncTick
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	HAL_IncTick:
 270              		.fnstart
 271              	.LFB240:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @}
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 11


 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  *  @brief    HAL Control functions
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  *
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** @verbatim
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  ===============================================================================
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****                       ##### HAL Control functions #####
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  ===============================================================================
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     [..]  This section provides functions allowing to:
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Provide a tick value in millisecond
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Provide a blocking delay in millisecond
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Suspend the time base source interrupt
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Resume the time base source interrupt
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Get the HAL API driver version
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Get the device identifier
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Get the device revision identifier
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Enable/Disable Debug module during SLEEP mode
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Enable/Disable Debug module during STOP mode
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       (+) Enable/Disable Debug module during STANDBY mode
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** @endverbatim
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @{
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief This function is called to increment  a global variable "uwTick"
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *        used as application time base.
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note In the default implementation, this variable is incremented each 1ms
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       in SysTick ISR.
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****  * @note This function is declared as __weak to be overwritten in case of other 
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *      implementations in user file.
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak void HAL_IncTick(void)
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 272              		.loc 1 313 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   uwTick += uwTickFreq;
 277              		.loc 1 314 3 view .LVU51
 278              		.loc 1 314 13 is_stmt 0 view .LVU52
 279 0000 034B     		ldr	r3, .L20
 280 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 281              		.loc 1 314 10 view .LVU53
 282 0004 034A     		ldr	r2, .L20+4
 283 0006 1168     		ldr	r1, [r2]
 284 0008 0B44     		add	r3, r3, r1
 285 000a 1360     		str	r3, [r2]
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 286              		.loc 1 315 1 view .LVU54
 287 000c 7047     		bx	lr
 288              	.L21:
 289 000e 00BF     		.align	2
 290              	.L20:
 291 0010 00000000 		.word	uwTickFreq
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 12


 292 0014 00000000 		.word	uwTick
 293              		.cfi_endproc
 294              	.LFE240:
 295              		.cantunwind
 296              		.fnend
 298              		.section	.text.HAL_GetTick,"ax",%progbits
 299              		.align	1
 300              		.weak	HAL_GetTick
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	HAL_GetTick:
 306              		.fnstart
 307              	.LFB241:
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief Provides a tick value in millisecond.
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note This function is declared as __weak to be overwritten in case of other 
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       implementations in user file.
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval tick value
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak uint32_t HAL_GetTick(void)
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 308              		.loc 1 324 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return uwTick;
 313              		.loc 1 325 3 view .LVU56
 314              		.loc 1 325 10 is_stmt 0 view .LVU57
 315 0000 014B     		ldr	r3, .L23
 316 0002 1868     		ldr	r0, [r3]
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 317              		.loc 1 326 1 view .LVU58
 318 0004 7047     		bx	lr
 319              	.L24:
 320 0006 00BF     		.align	2
 321              	.L23:
 322 0008 00000000 		.word	uwTick
 323              		.cfi_endproc
 324              	.LFE241:
 325              		.cantunwind
 326              		.fnend
 328              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 329              		.align	1
 330              		.global	HAL_GetTickPrio
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	HAL_GetTickPrio:
 336              		.fnstart
 337              	.LFB242:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief This function returns a tick priority.
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval tick priority
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 13


 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t HAL_GetTickPrio(void)
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 338              		.loc 1 333 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return uwTickPrio;
 343              		.loc 1 334 3 view .LVU60
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 344              		.loc 1 335 1 is_stmt 0 view .LVU61
 345 0000 014B     		ldr	r3, .L26
 346 0002 1868     		ldr	r0, [r3]
 347 0004 7047     		bx	lr
 348              	.L27:
 349 0006 00BF     		.align	2
 350              	.L26:
 351 0008 00000000 		.word	uwTickPrio
 352              		.cfi_endproc
 353              	.LFE242:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 358              		.align	1
 359              		.global	HAL_SetTickFreq
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 364              	HAL_SetTickFreq:
 365              		.fnstart
 366              	.LVL9:
 367              	.LFB243:
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief Set new tick Freq.
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval Status
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 368              		.loc 1 342 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		.loc 1 342 1 is_stmt 0 view .LVU63
 373 0000 10B5     		push	{r4, lr}
 374              		.save {r4, lr}
 375              	.LCFI3:
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 4, -8
 378              		.cfi_offset 14, -4
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   HAL_StatusTypeDef status  = HAL_OK;
 379              		.loc 1 343 3 is_stmt 1 view .LVU64
 380              	.LVL10:
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   HAL_TickFreqTypeDef prevTickFreq;
 381              		.loc 1 344 3 view .LVU65
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 14


 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   assert_param(IS_TICKFREQ(Freq));
 382              		.loc 1 346 3 view .LVU66
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   if (uwTickFreq != Freq)
 383              		.loc 1 348 3 view .LVU67
 384              		.loc 1 348 18 is_stmt 0 view .LVU68
 385 0002 084B     		ldr	r3, .L33
 386 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 387              		.loc 1 348 3 view .LVU69
 388 0006 8442     		cmp	r4, r0
 389 0008 01D1     		bne	.L32
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   HAL_TickFreqTypeDef prevTickFreq;
 390              		.loc 1 343 21 view .LVU70
 391 000a 0020     		movs	r0, #0
 392              	.LVL11:
 393              	.L29:
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   {
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     /* Back up uwTickFreq frequency */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     prevTickFreq = uwTickFreq;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     uwTickFreq = Freq;
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     /* Apply the new tick Freq  */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     status = HAL_InitTick(uwTickPrio);
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     if (status != HAL_OK)
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     {
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       /* Restore previous tick frequency */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****       uwTickFreq = prevTickFreq;
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return status;
 394              		.loc 1 366 3 is_stmt 1 view .LVU71
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 395              		.loc 1 367 1 is_stmt 0 view .LVU72
 396 000c 10BD     		pop	{r4, pc}
 397              	.LVL12:
 398              	.L32:
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 399              		.loc 1 351 5 is_stmt 1 view .LVU73
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 400              		.loc 1 354 5 view .LVU74
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 401              		.loc 1 354 16 is_stmt 0 view .LVU75
 402 000e 1870     		strb	r0, [r3]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 403              		.loc 1 357 5 is_stmt 1 view .LVU76
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 404              		.loc 1 357 26 is_stmt 0 view .LVU77
 405 0010 054B     		ldr	r3, .L33+4
 406 0012 1868     		ldr	r0, [r3]
 407              	.LVL13:
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 408              		.loc 1 357 26 view .LVU78
 409 0014 FFF7FEFF 		bl	HAL_InitTick
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 15


 410              	.LVL14:
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     {
 411              		.loc 1 359 5 is_stmt 1 view .LVU79
 412 0018 0028     		cmp	r0, #0
 413 001a F7D0     		beq	.L29
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     }
 414              		.loc 1 362 7 view .LVU80
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     }
 415              		.loc 1 362 18 is_stmt 0 view .LVU81
 416 001c 014B     		ldr	r3, .L33
 417 001e 1C70     		strb	r4, [r3]
 418 0020 F4E7     		b	.L29
 419              	.L34:
 420 0022 00BF     		.align	2
 421              	.L33:
 422 0024 00000000 		.word	uwTickFreq
 423 0028 00000000 		.word	uwTickPrio
 424              		.cfi_endproc
 425              	.LFE243:
 426              		.fnend
 428              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 429              		.align	1
 430              		.global	HAL_GetTickFreq
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	HAL_GetTickFreq:
 436              		.fnstart
 437              	.LFB244:
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief Return tick frequency.
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval tick period in Hz
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 438              		.loc 1 374 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return uwTickFreq;
 443              		.loc 1 375 3 view .LVU83
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 444              		.loc 1 376 1 is_stmt 0 view .LVU84
 445 0000 014B     		ldr	r3, .L36
 446 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 447 0004 7047     		bx	lr
 448              	.L37:
 449 0006 00BF     		.align	2
 450              	.L36:
 451 0008 00000000 		.word	uwTickFreq
 452              		.cfi_endproc
 453              	.LFE244:
 454              		.cantunwind
 455              		.fnend
 457              		.section	.text.HAL_Delay,"ax",%progbits
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 16


 458              		.align	1
 459              		.weak	HAL_Delay
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 464              	HAL_Delay:
 465              		.fnstart
 466              	.LVL15:
 467              	.LFB245:
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief This function provides minimum delay (in milliseconds) based 
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *        on variable incremented.
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note In the default implementation , SysTick timer is the source of time base.
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       It is used to generate interrupts at regular time intervals where uwTick
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       is incremented.
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note This function is declared as __weak to be overwritten in case of other
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       implementations in user file.
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @param Delay specifies the delay time length, in milliseconds.
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak void HAL_Delay(uint32_t Delay)
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 468              		.loc 1 390 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		.loc 1 390 1 is_stmt 0 view .LVU86
 473 0000 38B5     		push	{r3, r4, r5, lr}
 474              		.save {r3, r4, r5, lr}
 475              	.LCFI4:
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 3, -16
 478              		.cfi_offset 4, -12
 479              		.cfi_offset 5, -8
 480              		.cfi_offset 14, -4
 481 0002 0446     		mov	r4, r0
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   uint32_t tickstart = HAL_GetTick();
 482              		.loc 1 391 3 is_stmt 1 view .LVU87
 483              		.loc 1 391 35 is_stmt 0 view .LVU88
 484 0004 FFF7FEFF 		bl	HAL_GetTick
 485              	.LVL16:
 486              		.loc 1 391 35 view .LVU89
 487 0008 0546     		mov	r5, r0
 488              	.LVL17:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   uint32_t wait = Delay;
 489              		.loc 1 392 3 is_stmt 1 view .LVU90
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Add a freq to guarantee minimum wait */
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   if (wait < HAL_MAX_DELAY)
 490              		.loc 1 395 3 view .LVU91
 491 000a B4F1FF3F 		cmp	r4, #-1
 492 000e 02D0     		beq	.L40
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   {
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****     wait += (uint32_t)(uwTickFreq);
 493              		.loc 1 397 5 view .LVU92
 494              		.loc 1 397 13 is_stmt 0 view .LVU93
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 17


 495 0010 044B     		ldr	r3, .L42
 496 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497              		.loc 1 397 10 view .LVU94
 498 0014 1C44     		add	r4, r4, r3
 499              	.LVL18:
 500              	.L40:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   while((HAL_GetTick() - tickstart) < wait)
 501              		.loc 1 400 37 is_stmt 1 discriminator 1 view .LVU95
 502              		.loc 1 400 21 is_stmt 0 discriminator 1 view .LVU96
 503 0016 FFF7FEFF 		bl	HAL_GetTick
 504              	.LVL19:
 505              		.loc 1 400 24 discriminator 1 view .LVU97
 506 001a 401B     		subs	r0, r0, r5
 507              		.loc 1 400 37 discriminator 1 view .LVU98
 508 001c A042     		cmp	r0, r4
 509 001e FAD3     		bcc	.L40
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 510              		.loc 1 403 1 view .LVU99
 511 0020 38BD     		pop	{r3, r4, r5, pc}
 512              	.LVL20:
 513              	.L43:
 514              		.loc 1 403 1 view .LVU100
 515 0022 00BF     		.align	2
 516              	.L42:
 517 0024 00000000 		.word	uwTickFreq
 518              		.cfi_endproc
 519              	.LFE245:
 520              		.fnend
 522              		.section	.text.HAL_SuspendTick,"ax",%progbits
 523              		.align	1
 524              		.weak	HAL_SuspendTick
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 529              	HAL_SuspendTick:
 530              		.fnstart
 531              	.LFB246:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief Suspend Tick increment.
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       is suspended.
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note This function is declared as __weak to be overwritten in case of other
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       implementations in user file.
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak void HAL_SuspendTick(void)
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 532              		.loc 1 416 1 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 18


 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Disable SysTick Interrupt */
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 537              		.loc 1 418 3 view .LVU102
 538              		.loc 1 418 12 is_stmt 0 view .LVU103
 539 0000 4FF0E022 		mov	r2, #-536813568
 540 0004 1369     		ldr	r3, [r2, #16]
 541              		.loc 1 418 17 view .LVU104
 542 0006 23F00203 		bic	r3, r3, #2
 543 000a 1361     		str	r3, [r2, #16]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 544              		.loc 1 419 1 view .LVU105
 545 000c 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE246:
 548              		.cantunwind
 549              		.fnend
 551              		.section	.text.HAL_ResumeTick,"ax",%progbits
 552              		.align	1
 553              		.weak	HAL_ResumeTick
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	HAL_ResumeTick:
 559              		.fnstart
 560              	.LFB247:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief Resume Tick increment.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       is resumed.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note This function is declared as __weak to be overwritten in case of other
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *       implementations in user file.
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** __weak void HAL_ResumeTick(void)
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 561              		.loc 1 432 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   /* Enable SysTick Interrupt */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 566              		.loc 1 434 3 view .LVU107
 567              		.loc 1 434 12 is_stmt 0 view .LVU108
 568 0000 4FF0E022 		mov	r2, #-536813568
 569 0004 1369     		ldr	r3, [r2, #16]
 570              		.loc 1 434 18 view .LVU109
 571 0006 43F00203 		orr	r3, r3, #2
 572 000a 1361     		str	r3, [r2, #16]
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 573              		.loc 1 435 1 view .LVU110
 574 000c 7047     		bx	lr
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 19


 575              		.cfi_endproc
 576              	.LFE247:
 577              		.cantunwind
 578              		.fnend
 580              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 581              		.align	1
 582              		.global	HAL_GetHalVersion
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 587              	HAL_GetHalVersion:
 588              		.fnstart
 589              	.LFB248:
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Returns the HAL revision
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t HAL_GetHalVersion(void)
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 590              		.loc 1 442 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return __STM32F4xx_HAL_VERSION;
 595              		.loc 1 443 3 view .LVU112
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 596              		.loc 1 444 1 is_stmt 0 view .LVU113
 597 0000 0048     		ldr	r0, .L47
 598 0002 7047     		bx	lr
 599              	.L48:
 600              		.align	2
 601              	.L47:
 602 0004 00010801 		.word	17301760
 603              		.cfi_endproc
 604              	.LFE248:
 605              		.cantunwind
 606              		.fnend
 608              		.section	.text.HAL_GetREVID,"ax",%progbits
 609              		.align	1
 610              		.global	HAL_GetREVID
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 615              	HAL_GetREVID:
 616              		.fnstart
 617              	.LFB249:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Returns the device revision identifier.
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval Device revision identifier
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t HAL_GetREVID(void)
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 618              		.loc 1 451 1 is_stmt 1 view -0
 619              		.cfi_startproc
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 20


 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return((DBGMCU->IDCODE) >> 16U);
 623              		.loc 1 452 3 view .LVU115
 624              		.loc 1 452 19 is_stmt 0 view .LVU116
 625 0000 014B     		ldr	r3, .L50
 626 0002 1868     		ldr	r0, [r3]
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 627              		.loc 1 453 1 view .LVU117
 628 0004 000C     		lsrs	r0, r0, #16
 629 0006 7047     		bx	lr
 630              	.L51:
 631              		.align	2
 632              	.L50:
 633 0008 002004E0 		.word	-536600576
 634              		.cfi_endproc
 635              	.LFE249:
 636              		.cantunwind
 637              		.fnend
 639              		.section	.text.HAL_GetDEVID,"ax",%progbits
 640              		.align	1
 641              		.global	HAL_GetDEVID
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 646              	HAL_GetDEVID:
 647              		.fnstart
 648              	.LFB250:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Returns the device identifier.
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval Device identifier
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t HAL_GetDEVID(void)
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 649              		.loc 1 460 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 654              		.loc 1 461 3 view .LVU119
 655              		.loc 1 461 19 is_stmt 0 view .LVU120
 656 0000 024B     		ldr	r3, .L53
 657 0002 1868     		ldr	r0, [r3]
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 658              		.loc 1 462 1 view .LVU121
 659 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 660 0008 7047     		bx	lr
 661              	.L54:
 662 000a 00BF     		.align	2
 663              	.L53:
 664 000c 002004E0 		.word	-536600576
 665              		.cfi_endproc
 666              	.LFE250:
 667              		.cantunwind
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 21


 668              		.fnend
 670              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 671              		.align	1
 672              		.global	HAL_DBGMCU_EnableDBGSleepMode
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	HAL_DBGMCU_EnableDBGSleepMode:
 678              		.fnstart
 679              	.LFB251:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Enable the Debug Module during SLEEP mode
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 680              		.loc 1 469 1 is_stmt 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 685              		.loc 1 470 3 view .LVU123
 686 0000 024A     		ldr	r2, .L56
 687 0002 5368     		ldr	r3, [r2, #4]
 688 0004 43F00103 		orr	r3, r3, #1
 689 0008 5360     		str	r3, [r2, #4]
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 690              		.loc 1 471 1 is_stmt 0 view .LVU124
 691 000a 7047     		bx	lr
 692              	.L57:
 693              		.align	2
 694              	.L56:
 695 000c 002004E0 		.word	-536600576
 696              		.cfi_endproc
 697              	.LFE251:
 698              		.cantunwind
 699              		.fnend
 701              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 702              		.align	1
 703              		.global	HAL_DBGMCU_DisableDBGSleepMode
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 708              	HAL_DBGMCU_DisableDBGSleepMode:
 709              		.fnstart
 710              	.LFB252:
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Disable the Debug Module during SLEEP mode
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 711              		.loc 1 478 1 is_stmt 1 view -0
 712              		.cfi_startproc
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 22


 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 716              		.loc 1 479 3 view .LVU126
 717 0000 024A     		ldr	r2, .L59
 718 0002 5368     		ldr	r3, [r2, #4]
 719 0004 23F00103 		bic	r3, r3, #1
 720 0008 5360     		str	r3, [r2, #4]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 721              		.loc 1 480 1 is_stmt 0 view .LVU127
 722 000a 7047     		bx	lr
 723              	.L60:
 724              		.align	2
 725              	.L59:
 726 000c 002004E0 		.word	-536600576
 727              		.cfi_endproc
 728              	.LFE252:
 729              		.cantunwind
 730              		.fnend
 732              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 733              		.align	1
 734              		.global	HAL_DBGMCU_EnableDBGStopMode
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 739              	HAL_DBGMCU_EnableDBGStopMode:
 740              		.fnstart
 741              	.LFB253:
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Enable the Debug Module during STOP mode
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_DBGMCU_EnableDBGStopMode(void)
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 742              		.loc 1 487 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 747              		.loc 1 488 3 view .LVU129
 748 0000 024A     		ldr	r2, .L62
 749 0002 5368     		ldr	r3, [r2, #4]
 750 0004 43F00203 		orr	r3, r3, #2
 751 0008 5360     		str	r3, [r2, #4]
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 752              		.loc 1 489 1 is_stmt 0 view .LVU130
 753 000a 7047     		bx	lr
 754              	.L63:
 755              		.align	2
 756              	.L62:
 757 000c 002004E0 		.word	-536600576
 758              		.cfi_endproc
 759              	.LFE253:
 760              		.cantunwind
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 23


 761              		.fnend
 763              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 764              		.align	1
 765              		.global	HAL_DBGMCU_DisableDBGStopMode
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	HAL_DBGMCU_DisableDBGStopMode:
 771              		.fnstart
 772              	.LFB254:
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Disable the Debug Module during STOP mode
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_DBGMCU_DisableDBGStopMode(void)
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 773              		.loc 1 496 1 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 778              		.loc 1 497 3 view .LVU132
 779 0000 024A     		ldr	r2, .L65
 780 0002 5368     		ldr	r3, [r2, #4]
 781 0004 23F00203 		bic	r3, r3, #2
 782 0008 5360     		str	r3, [r2, #4]
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 783              		.loc 1 498 1 is_stmt 0 view .LVU133
 784 000a 7047     		bx	lr
 785              	.L66:
 786              		.align	2
 787              	.L65:
 788 000c 002004E0 		.word	-536600576
 789              		.cfi_endproc
 790              	.LFE254:
 791              		.cantunwind
 792              		.fnend
 794              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 795              		.align	1
 796              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 801              	HAL_DBGMCU_EnableDBGStandbyMode:
 802              		.fnstart
 803              	.LFB255:
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Enable the Debug Module during STANDBY mode
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 804              		.loc 1 505 1 is_stmt 1 view -0
 805              		.cfi_startproc
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 24


 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 809              		.loc 1 506 3 view .LVU135
 810 0000 024A     		ldr	r2, .L68
 811 0002 5368     		ldr	r3, [r2, #4]
 812 0004 43F00403 		orr	r3, r3, #4
 813 0008 5360     		str	r3, [r2, #4]
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 814              		.loc 1 507 1 is_stmt 0 view .LVU136
 815 000a 7047     		bx	lr
 816              	.L69:
 817              		.align	2
 818              	.L68:
 819 000c 002004E0 		.word	-536600576
 820              		.cfi_endproc
 821              	.LFE255:
 822              		.cantunwind
 823              		.fnend
 825              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 826              		.align	1
 827              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	HAL_DBGMCU_DisableDBGStandbyMode:
 833              		.fnstart
 834              	.LFB256:
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Disable the Debug Module during STANDBY mode
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 835              		.loc 1 514 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 840              		.loc 1 515 3 view .LVU138
 841 0000 024A     		ldr	r2, .L71
 842 0002 5368     		ldr	r3, [r2, #4]
 843 0004 23F00403 		bic	r3, r3, #4
 844 0008 5360     		str	r3, [r2, #4]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 845              		.loc 1 516 1 is_stmt 0 view .LVU139
 846 000a 7047     		bx	lr
 847              	.L72:
 848              		.align	2
 849              	.L71:
 850 000c 002004E0 		.word	-536600576
 851              		.cfi_endproc
 852              	.LFE256:
 853              		.cantunwind
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 25


 854              		.fnend
 856              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 857              		.align	1
 858              		.global	HAL_EnableCompensationCell
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 863              	HAL_EnableCompensationCell:
 864              		.fnstart
 865              	.LFB257:
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Enables the I/O Compensation Cell.
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note   The I/O compensation cell can be used only when the device supply
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *         voltage ranges from 2.4 to 3.6 V.  
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_EnableCompensationCell(void)
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 866              		.loc 1 525 1 is_stmt 1 view -0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              		@ link register save eliminated.
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)ENABLE;
 871              		.loc 1 526 3 view .LVU141
 872              		.loc 1 526 37 is_stmt 0 view .LVU142
 873 0000 024B     		ldr	r3, .L74
 874 0002 0122     		movs	r2, #1
 875 0004 C3F80024 		str	r2, [r3, #1024]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 876              		.loc 1 527 1 view .LVU143
 877 0008 7047     		bx	lr
 878              	.L75:
 879 000a 00BF     		.align	2
 880              	.L74:
 881 000c 00002742 		.word	1109852160
 882              		.cfi_endproc
 883              	.LFE257:
 884              		.cantunwind
 885              		.fnend
 887              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 888              		.align	1
 889              		.global	HAL_DisableCompensationCell
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	HAL_DisableCompensationCell:
 895              		.fnstart
 896              	.LFB258:
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Power-down the I/O Compensation Cell.
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @note   The I/O compensation cell can be used only when the device supply
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *         voltage ranges from 2.4 to 3.6 V.  
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval None
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 26


 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** void HAL_DisableCompensationCell(void)
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 897              		.loc 1 536 1 is_stmt 1 view -0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              		@ link register save eliminated.
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)DISABLE;
 902              		.loc 1 537 3 view .LVU145
 903              		.loc 1 537 37 is_stmt 0 view .LVU146
 904 0000 024B     		ldr	r3, .L77
 905 0002 0022     		movs	r2, #0
 906 0004 C3F80024 		str	r2, [r3, #1024]
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 907              		.loc 1 538 1 view .LVU147
 908 0008 7047     		bx	lr
 909              	.L78:
 910 000a 00BF     		.align	2
 911              	.L77:
 912 000c 00002742 		.word	1109852160
 913              		.cfi_endproc
 914              	.LFE258:
 915              		.cantunwind
 916              		.fnend
 918              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 919              		.align	1
 920              		.global	HAL_GetUIDw0
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 925              	HAL_GetUIDw0:
 926              		.fnstart
 927              	.LFB259:
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval Device identifier
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t HAL_GetUIDw0(void)
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 928              		.loc 1 545 1 is_stmt 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		@ link register save eliminated.
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 933              		.loc 1 546 3 view .LVU149
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 934              		.loc 1 547 1 is_stmt 0 view .LVU150
 935 0000 014B     		ldr	r3, .L80
 936 0002 D3F8100A 		ldr	r0, [r3, #2576]
 937 0006 7047     		bx	lr
 938              	.L81:
 939              		.align	2
 940              	.L80:
 941 0008 0070FF1F 		.word	536834048
 942              		.cfi_endproc
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 27


 943              	.LFE259:
 944              		.cantunwind
 945              		.fnend
 947              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 948              		.align	1
 949              		.global	HAL_GetUIDw1
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	HAL_GetUIDw1:
 955              		.fnstart
 956              	.LFB260:
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval Device identifier
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t HAL_GetUIDw1(void)
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 957              		.loc 1 554 1 is_stmt 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              		@ link register save eliminated.
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 962              		.loc 1 555 3 view .LVU152
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 963              		.loc 1 556 1 is_stmt 0 view .LVU153
 964 0000 014B     		ldr	r3, .L83
 965 0002 D3F8140A 		ldr	r0, [r3, #2580]
 966 0006 7047     		bx	lr
 967              	.L84:
 968              		.align	2
 969              	.L83:
 970 0008 0070FF1F 		.word	536834048
 971              		.cfi_endproc
 972              	.LFE260:
 973              		.cantunwind
 974              		.fnend
 976              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 977              		.align	1
 978              		.global	HAL_GetUIDw2
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 983              	HAL_GetUIDw2:
 984              		.fnstart
 985              	.LFB261:
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** /**
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   * @retval Device identifier
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   */
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** uint32_t HAL_GetUIDw2(void)
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** {
 986              		.loc 1 563 1 is_stmt 1 view -0
 987              		.cfi_startproc
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 28


 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990              		@ link register save eliminated.
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 991              		.loc 1 564 3 view .LVU155
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.cpp **** }
 992              		.loc 1 565 1 is_stmt 0 view .LVU156
 993 0000 014B     		ldr	r3, .L86
 994 0002 D3F8180A 		ldr	r0, [r3, #2584]
 995 0006 7047     		bx	lr
 996              	.L87:
 997              		.align	2
 998              	.L86:
 999 0008 0070FF1F 		.word	536834048
 1000              		.cfi_endproc
 1001              	.LFE261:
 1002              		.cantunwind
 1003              		.fnend
 1005              		.global	uwTickFreq
 1006              		.section	.data.uwTickFreq,"aw"
 1009              	uwTickFreq:
 1010 0000 01       		.byte	1
 1011              		.global	uwTickPrio
 1012              		.section	.data.uwTickPrio,"aw"
 1013              		.align	2
 1016              	uwTickPrio:
 1017 0000 10000000 		.word	16
 1018              		.global	uwTick
 1019              		.section	.bss.uwTick,"aw",%nobits
 1020              		.align	2
 1023              	uwTick:
 1024 0000 00000000 		.space	4
 1025              		.text
 1026              	.Letext0:
 1027              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1028              		.file 3 "c:\\users\\huawei\\desktop\\workspace\\stm32\\vs code tools\\arm-gnu-toolchain-12.2.rel1-
 1029              		.file 4 "c:\\users\\huawei\\desktop\\workspace\\stm32\\vs code tools\\arm-gnu-toolchain-12.2.rel1-
 1030              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1031              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1032              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1033              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1034              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1035              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal.cpp
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:21     .text.HAL_MspInit:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:27     .text.HAL_MspInit:00000000 HAL_MspInit
      .ARM.exidx.text.HAL_MspInit:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:43     .text.HAL_MspDeInit:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:49     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
    .ARM.exidx.text.HAL_MspDeInit:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:65     .text.HAL_DeInit:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:71     .text.HAL_DeInit:00000000 HAL_DeInit
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:118    .text.HAL_DeInit:00000028 $d
       .ARM.exidx.text.HAL_DeInit:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:124    .text.HAL_InitTick:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:130    .text.HAL_InitTick:00000000 HAL_InitTick
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:196    .text.HAL_InitTick:00000040 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:1009   .data.uwTickFreq:00000000 uwTickFreq
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:1016   .data.uwTickPrio:00000000 uwTickPrio
     .ARM.exidx.text.HAL_InitTick:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:204    .text.HAL_Init:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:210    .text.HAL_Init:00000000 HAL_Init
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:257    .text.HAL_Init:00000030 $d
         .ARM.extab.text.HAL_Init:00000000 $d
         .ARM.exidx.text.HAL_Init:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:263    .text.HAL_IncTick:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:269    .text.HAL_IncTick:00000000 HAL_IncTick
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:291    .text.HAL_IncTick:00000010 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:1023   .bss.uwTick:00000000 uwTick
      .ARM.exidx.text.HAL_IncTick:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:299    .text.HAL_GetTick:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:305    .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:322    .text.HAL_GetTick:00000008 $d
      .ARM.exidx.text.HAL_GetTick:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:329    .text.HAL_GetTickPrio:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:335    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:351    .text.HAL_GetTickPrio:00000008 $d
  .ARM.exidx.text.HAL_GetTickPrio:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:358    .text.HAL_SetTickFreq:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:364    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:422    .text.HAL_SetTickFreq:00000024 $d
  .ARM.exidx.text.HAL_SetTickFreq:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:429    .text.HAL_GetTickFreq:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:435    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:451    .text.HAL_GetTickFreq:00000008 $d
  .ARM.exidx.text.HAL_GetTickFreq:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:458    .text.HAL_Delay:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:464    .text.HAL_Delay:00000000 HAL_Delay
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:517    .text.HAL_Delay:00000024 $d
        .ARM.exidx.text.HAL_Delay:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:523    .text.HAL_SuspendTick:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:529    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
  .ARM.exidx.text.HAL_SuspendTick:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:552    .text.HAL_ResumeTick:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:558    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
   .ARM.exidx.text.HAL_ResumeTick:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:581    .text.HAL_GetHalVersion:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:587    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:602    .text.HAL_GetHalVersion:00000004 $d
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 30


.ARM.exidx.text.HAL_GetHalVersion:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:609    .text.HAL_GetREVID:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:615    .text.HAL_GetREVID:00000000 HAL_GetREVID
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:633    .text.HAL_GetREVID:00000008 $d
     .ARM.exidx.text.HAL_GetREVID:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:640    .text.HAL_GetDEVID:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:646    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:664    .text.HAL_GetDEVID:0000000c $d
     .ARM.exidx.text.HAL_GetDEVID:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:671    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:677    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:695    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:702    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:708    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:726    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:733    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:739    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:757    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:764    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:770    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:788    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:795    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:801    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:819    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:826    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:832    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:850    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:857    .text.HAL_EnableCompensationCell:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:863    .text.HAL_EnableCompensationCell:00000000 HAL_EnableCompensationCell
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:881    .text.HAL_EnableCompensationCell:0000000c $d
.ARM.exidx.text.HAL_EnableCompensationCell:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:888    .text.HAL_DisableCompensationCell:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:894    .text.HAL_DisableCompensationCell:00000000 HAL_DisableCompensationCell
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:912    .text.HAL_DisableCompensationCell:0000000c $d
.ARM.exidx.text.HAL_DisableCompensationCell:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:919    .text.HAL_GetUIDw0:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:925    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:941    .text.HAL_GetUIDw0:00000008 $d
     .ARM.exidx.text.HAL_GetUIDw0:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:948    .text.HAL_GetUIDw1:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:954    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:970    .text.HAL_GetUIDw1:00000008 $d
     .ARM.exidx.text.HAL_GetUIDw1:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:977    .text.HAL_GetUIDw2:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:983    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:999    .text.HAL_GetUIDw2:00000008 $d
     .ARM.exidx.text.HAL_GetUIDw2:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:1013   .data.uwTickPrio:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s:1020   .bss.uwTick:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccGXEG09.s 			page 31


__aeabi_unwind_cpp_pr0
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
__aeabi_unwind_cpp_pr1
