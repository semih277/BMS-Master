ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_flash.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp"
  20              		.section	.text._ZL24FLASH_Program_DoubleWordmy,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZL24FLASH_Program_DoubleWordmy:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB247:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @file    stm32f4xx_hal_flash.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *           + Program operations functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *           + Memory Control functions 
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *           + Peripheral Errors functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                         ##### FLASH peripheral features #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****            
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses 
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        to the Flash memory. It implements the erase and program Flash memory operations 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        and the read and write protection mechanisms.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   [..] The Flash memory interface accelerates code execution with a system of instruction
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        prefetch and cache lines. 
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   [..] The FLASH main features are:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (+) Flash memory read operations
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (+) Flash memory program/erase operations
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (+) Read / write protections
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (+) Prefetch on I-Code
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (+) 64 cache lines of 128 bits on I-Code
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 2


  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (+) 8 cache lines of 128 bits on D-Code
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                      ##### How to use this driver #####
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   ==============================================================================
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     [..]                             
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       This driver provides functions and macros to configure and program the FLASH 
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       memory of all STM32F4xx devices.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (#) FLASH Memory IO Programming functions: 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                 HAL_FLASH_Lock() functions
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****            (++) Program functions: byte, half word, word and double word
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****            (++) There Two modes of programming :
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****             (+++) Polling mode using HAL_FLASH_Program() function
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       (#) Interrupts and flags management functions : 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****            (++) Wait for last FLASH operation according to its status
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****            (++) Get error flag status by calling HAL_SetErrorCode()          
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     [..] 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       In addition to these functions, this driver includes a set of macros allowing
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       to handle the following operations:
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        (+) Set the latency
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        (+) Enable/Disable the prefetch buffer
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        (+) Enable/Disable the Instruction cache and the Data cache
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        (+) Reset the Instruction cache and the Data cache
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        (+) Enable/Disable the FLASH interrupts
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****        (+) Monitor the FLASH flags status
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****           
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   @endverbatim
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   ******************************************************************************
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @attention
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * Copyright (c) 2017 STMicroelectronics.
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * All rights reserved.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * This software is licensed under terms that can be found in the LICENSE file in
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * the root directory of this software component.
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   ******************************************************************************
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */ 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Includes ------------------------------------------------------------------*/
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #include "stm32f4xx_hal.h"
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @addtogroup STM32F4xx_HAL_Driver
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @defgroup FLASH FLASH
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief FLASH HAL module driver
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 3


  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #ifdef HAL_FLASH_MODULE_ENABLED
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Private typedef -----------------------------------------------------------*/
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Private define ------------------------------------------------------------*/
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @addtogroup FLASH_Private_Constants
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #define FLASH_TIMEOUT_VALUE       50000U /* 50 s */
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @}
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */         
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Private macro -------------------------------------------------------------*/
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Private variables ---------------------------------------------------------*/
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @addtogroup FLASH_Private_Variables
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Variable used for Erase sectors under interruption */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** FLASH_ProcessTypeDef pFlash;
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @}
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Private function prototypes -----------------------------------------------*/
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @addtogroup FLASH_Private_Functions
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Program operations */
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void   FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void   FLASH_Program_Word(uint32_t Address, uint32_t Data);
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void   FLASH_Program_HalfWord(uint32_t Address, uint16_t Data);
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void   FLASH_Program_Byte(uint32_t Address, uint8_t Data);
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void   FLASH_SetErrorCode(void);
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout);
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @}
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /* Exported functions --------------------------------------------------------*/
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  *  @brief   Programming operation functions 
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  *
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** @verbatim   
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  ===============================================================================
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                   ##### Programming operation functions #####
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  ===============================================================================  
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     This subsection provides a set of functions allowing to manage the FLASH 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     program operations.
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** @endverbatim
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 4


 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Program byte, halfword, word or double word at a specified address
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Address  specifies the address to be programmed.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Data specifies the data to be programmed
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL_StatusTypeDef HAL Status
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_ERROR;
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Process Locked */
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   __HAL_LOCK(&pFlash);
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check the parameters */
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Wait for last operation to be completed */
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(status == HAL_OK)
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*Program byte (8-bit) at a specified address.*/
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       FLASH_Program_Byte(Address, (uint8_t) Data);
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*Program halfword (16-bit) at a specified address.*/
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       FLASH_Program_HalfWord(Address, (uint16_t) Data);
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*Program word (32-bit) at a specified address.*/
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       FLASH_Program_Word(Address, (uint32_t) Data);
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     else
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*Program double word (64-bit) at a specified address.*/
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       FLASH_Program_DoubleWord(Address, Data);
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Wait for last operation to be completed */
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* If the program operation is completed, disable the PG Bit */
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH->CR &= (~FLASH_CR_PG);  
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Process Unlocked */
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   __HAL_UNLOCK(&pFlash);
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return status;
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 5


 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief   Program byte, halfword, word or double word at a specified address  with interrupt ena
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Address  specifies the address to be programmed.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Data specifies the data to be programmed
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * 
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL Status
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_OK;
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Process Locked */
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   __HAL_LOCK(&pFlash);
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check the parameters */
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Enable End of FLASH Operation interrupt */
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Enable Error source interrupt */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM;
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   pFlash.Address = Address;
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /*Program byte (8-bit) at a specified address.*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       FLASH_Program_Byte(Address, (uint8_t) Data);
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /*Program halfword (16-bit) at a specified address.*/
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_Program_HalfWord(Address, (uint16_t) Data);
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /*Program word (32-bit) at a specified address.*/
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_Program_Word(Address, (uint32_t) Data);
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   else
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /*Program double word (64-bit) at a specified address.*/
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_Program_DoubleWord(Address, Data);
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return status;
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief This function handles FLASH interrupt request.
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 6


 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** void HAL_FLASH_IRQHandler(void)
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   uint32_t addresstmp = 0U;
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check FLASH operation error flags */
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #if defined(FLASH_SR_RDERR) 
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #else
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR)) != RESET)
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #endif /* FLASH_SR_RDERR */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE)
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*return the faulty sector*/
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       addresstmp = pFlash.Sector;
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       pFlash.Sector = 0xFFFFFFFFU;
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     else if(pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE)
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*return the faulty bank*/
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       addresstmp = pFlash.Bank;
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     else
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*return the faulty address*/
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       addresstmp = pFlash.Address;
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /*Save the Error code*/
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_SetErrorCode();
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* FLASH error interrupt user callback */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     HAL_FLASH_OperationErrorCallback(addresstmp);
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /*Stop the procedure ongoing*/
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check FLASH End of Operation flag  */
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Clear FLASH End of Operation pending bit */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE)
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /*Nb of sector to erased can be decreased*/
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       pFlash.NbSectorsToErase--;
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       /* Check if there are still sectors to erase*/
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       if(pFlash.NbSectorsToErase != 0U)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         addresstmp = pFlash.Sector;
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /*Indicate user which sector has been erased*/
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 7


 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         HAL_FLASH_EndOfOperationCallback(addresstmp);
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /*Increment sector number*/
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         pFlash.Sector++;
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         addresstmp = pFlash.Sector;
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         FLASH_Erase_Sector(addresstmp, pFlash.VoltageForErase);
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       else
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /*No more sectors to Erase, user callback can be called.*/
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /*Reset Sector and stop Erase sectors procedure*/
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         pFlash.Sector = addresstmp = 0xFFFFFFFFU;
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /* Flush the caches to be sure of the data consistency */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         FLASH_FlushCaches() ;
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                 
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /* FLASH EOP interrupt user callback */
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         HAL_FLASH_EndOfOperationCallback(addresstmp);
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     else 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       if(pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE) 
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /* MassErase ended. Return the selected bank */
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /* Flush the caches to be sure of the data consistency */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         FLASH_FlushCaches() ;
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /* FLASH EOP interrupt user callback */
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         HAL_FLASH_EndOfOperationCallback(pFlash.Bank);
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       else
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /*Program ended. Return the selected address*/
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /* FLASH EOP interrupt user callback */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Operation is completed, disable the PG, SER, SNB and MER Bits */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     CLEAR_BIT(FLASH->CR, (FLASH_CR_PG | FLASH_CR_SER | FLASH_CR_SNB | FLASH_MER_BIT));
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Disable End of FLASH Operation interrupt */
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP);
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Disable Error source interrupt */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_ERR);
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Process Unlocked */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_UNLOCK(&pFlash);
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 8


 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  FLASH end of operation interrupt callback
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                  Mass Erase: Bank number which has been requested to erase
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                  Sectors Erase: Sector which has been erased 
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                    (if 0xFFFFFFFFU, it means that all the selected sectors have been erased)
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                  Program: Address which was selected for data program
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Prevent unused argument(s) compilation warning */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   UNUSED(ReturnValue);
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* NOTE : This function Should not be modified, when the callback is needed,
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    */ 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  FLASH operation error interrupt callback
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                 Mass Erase: Bank number which has been requested to erase
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                 Sectors Erase: Sector number which returned an error
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *                 Program: Address which was selected for data program
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Prevent unused argument(s) compilation warning */
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   UNUSED(ReturnValue);
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* NOTE : This function Should not be modified, when the callback is needed,
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    */ 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @}
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions 
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  *  @brief   management functions 
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  *
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** @verbatim   
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  ===============================================================================
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                       ##### Peripheral Control functions #####
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  ===============================================================================  
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     [..]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     This subsection provides a set of functions allowing to control the FLASH 
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     memory operations.
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** @endverbatim
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Unlock the FLASH control register access
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 9


 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL Status
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_OK;
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Authorize the FLASH Registers access */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Verify Flash is unlocked */
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       status = HAL_ERROR;
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return status;
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Locks the FLASH control register access
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL Status
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_CR_LOCK;
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return HAL_OK;  
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Unlock the FLASH Option Control Registers access.
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL Status
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Authorizes the Option Byte register programming */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   else
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     return HAL_ERROR;
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }  
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return HAL_OK;  
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Lock the FLASH Option Control Registers access.
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL Status 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 10


 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return HAL_OK;  
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Launch the option byte loading.
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL Status
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Set the OPTSTRT bit in OPTCR register */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Wait for last operation to be completed */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE)); 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @}
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions 
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  *  @brief   Peripheral Errors functions 
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  *
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** @verbatim   
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  ===============================================================================
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                 ##### Peripheral Errors functions #####
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****  ===============================================================================  
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     [..]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** @endverbatim
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @{
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Get the specific FLASH error flag.
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval FLASH_ErrorCode: The returned value can be a combination of:
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *            @arg HAL_FLASH_ERROR_RD: FLASH Read Protection error flag (PCROP)
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *            @arg HAL_FLASH_ERROR_PGS: FLASH Programming Sequence error flag 
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *            @arg HAL_FLASH_ERROR_PGP: FLASH Programming Parallelism error flag  
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *            @arg HAL_FLASH_ERROR_PGA: FLASH Programming Alignment error flag
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *            @arg HAL_FLASH_ERROR_WRP: FLASH Write protected error flag
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *            @arg HAL_FLASH_ERROR_OPERATION: FLASH operation Error flag 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** uint32_t HAL_FLASH_GetError(void)
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** { 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    return pFlash.ErrorCode;
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }  
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @}
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 11


 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */    
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Wait for a FLASH operation to complete.
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Timeout maximum flash operationtimeout
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval HAL Status
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** { 
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   uint32_t tickstart = 0U;
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Clear Error Code */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****      flag will be set */
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Get tick */
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   tickstart = HAL_GetTick();
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   { 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     if(Timeout != HAL_MAX_DELAY)
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         return HAL_TIMEOUT;
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     } 
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check FLASH End of Operation flag  */
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Clear FLASH End of Operation pending bit */
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #if defined(FLASH_SR_RDERR)  
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #else
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR)) != RESET)
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #endif /* FLASH_SR_RDERR */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /*Save the error code*/
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_SetErrorCode();
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     return HAL_ERROR;
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* If there is no error flag set */
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   return HAL_OK;
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }  
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Program a double word (64-bit) at a specified address.
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 12


 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   This function must be used when the device voltage range is from
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         2.7V to 3.6V and Vpp in the range 7V to 9V.
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   If an erase and a program operations are requested simultaneously,    
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         the erase operation is performed before the program one.
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *  
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Address specifies the address to be programmed.
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Data specifies the data to be programmed.
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
  30              		.loc 1 611 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 611 1 is_stmt 0 view .LVU1
  36 0000 10B4     		push	{r4}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 4, -4
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check the parameters */
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   assert_param(IS_FLASH_ADDRESS(Address));
  40              		.loc 1 613 3 is_stmt 1 view .LVU2
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* If the previous operation is completed, proceed to program the new data */
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
  41              		.loc 1 616 3 view .LVU3
  42 0002 0A49     		ldr	r1, .L3
  43 0004 0C69     		ldr	r4, [r1, #16]
  44 0006 24F44074 		bic	r4, r4, #768
  45 000a 0C61     		str	r4, [r1, #16]
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
  46              		.loc 1 617 3 view .LVU4
  47              		.loc 1 617 10 is_stmt 0 view .LVU5
  48 000c 0C69     		ldr	r4, [r1, #16]
  49              		.loc 1 617 13 view .LVU6
  50 000e 44F44074 		orr	r4, r4, #768
  51 0012 0C61     		str	r4, [r1, #16]
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_CR_PG;
  52              		.loc 1 618 3 is_stmt 1 view .LVU7
  53              		.loc 1 618 10 is_stmt 0 view .LVU8
  54 0014 0C69     		ldr	r4, [r1, #16]
  55              		.loc 1 618 13 view .LVU9
  56 0016 44F00104 		orr	r4, r4, #1
  57 001a 0C61     		str	r4, [r1, #16]
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Program first word */
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *(__IO uint32_t*)Address = (uint32_t)Data;
  58              		.loc 1 621 3 is_stmt 1 view .LVU10
  59              		.loc 1 621 28 is_stmt 0 view .LVU11
  60 001c 0260     		str	r2, [r0]
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     (independently of compiler optimization behavior) */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   __ISB();
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 13


  61              		.loc 1 625 3 is_stmt 1 view .LVU12
  62              	.LBB4:
  63              	.LBI4:
  64              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 14


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 15


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 16


 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 17


 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 18


 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 19


 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 20


 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 21


 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 22


 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 23


 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 24


 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 25


 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 26


 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 27


 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 28


 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
  65              		.loc 2 866 27 view .LVU13
  66              	.LBB5:
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
  67              		.loc 2 868 3 view .LVU14
  68              		.syntax unified
  69              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  70 001e BFF36F8F 		isb 0xF
  71              	@ 0 "" 2
  72              		.thumb
  73              		.syntax unified
  74              	.LBE5:
  75              	.LBE4:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Program second word */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
  76              		.loc 1 628 3 view .LVU15
  77              		.loc 1 628 32 is_stmt 0 view .LVU16
  78 0022 4360     		str	r3, [r0, #4]
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
  79              		.loc 1 629 1 view .LVU17
  80 0024 5DF8044B 		ldr	r4, [sp], #4
  81              	.LCFI1:
  82              		.cfi_restore 4
  83              		.cfi_def_cfa_offset 0
  84 0028 7047     		bx	lr
  85              	.L4:
  86 002a 00BF     		.align	2
  87              	.L3:
  88 002c 003C0240 		.word	1073888256
  89              		.cfi_endproc
  90              	.LFE247:
  91              		.cantunwind
  92              		.fnend
  94              		.section	.text._ZL18FLASH_Program_Wordmm,"ax",%progbits
  95              		.align	1
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	_ZL18FLASH_Program_Wordmm:
 101              		.fnstart
 102              	.LVL1:
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 29


 103              	.LFB248:
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Program word (32-bit) at a specified address.
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   This function must be used when the device voltage range is from
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         2.7V to 3.6V.
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   If an erase and a program operations are requested simultaneously,    
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         the erase operation is performed before the program one.
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *  
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Address specifies the address to be programmed.
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Data specifies the data to be programmed.
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void FLASH_Program_Word(uint32_t Address, uint32_t Data)
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 104              		.loc 1 645 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check the parameters */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   assert_param(IS_FLASH_ADDRESS(Address));
 109              		.loc 1 647 3 view .LVU19
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* If the previous operation is completed, proceed to program the new data */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 110              		.loc 1 650 3 view .LVU20
 111 0000 074B     		ldr	r3, .L6
 112 0002 1A69     		ldr	r2, [r3, #16]
 113 0004 22F44072 		bic	r2, r2, #768
 114 0008 1A61     		str	r2, [r3, #16]
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_PSIZE_WORD;
 115              		.loc 1 651 3 view .LVU21
 116              		.loc 1 651 10 is_stmt 0 view .LVU22
 117 000a 1A69     		ldr	r2, [r3, #16]
 118              		.loc 1 651 13 view .LVU23
 119 000c 42F40072 		orr	r2, r2, #512
 120 0010 1A61     		str	r2, [r3, #16]
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_CR_PG;
 121              		.loc 1 652 3 is_stmt 1 view .LVU24
 122              		.loc 1 652 10 is_stmt 0 view .LVU25
 123 0012 1A69     		ldr	r2, [r3, #16]
 124              		.loc 1 652 13 view .LVU26
 125 0014 42F00102 		orr	r2, r2, #1
 126 0018 1A61     		str	r2, [r3, #16]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *(__IO uint32_t*)Address = Data;
 127              		.loc 1 654 3 is_stmt 1 view .LVU27
 128              		.loc 1 654 28 is_stmt 0 view .LVU28
 129 001a 0160     		str	r1, [r0]
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 130              		.loc 1 655 1 view .LVU29
 131 001c 7047     		bx	lr
 132              	.L7:
 133 001e 00BF     		.align	2
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 30


 134              	.L6:
 135 0020 003C0240 		.word	1073888256
 136              		.cfi_endproc
 137              	.LFE248:
 138              		.cantunwind
 139              		.fnend
 141              		.section	.text._ZL22FLASH_Program_HalfWordmt,"ax",%progbits
 142              		.align	1
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	_ZL22FLASH_Program_HalfWordmt:
 148              		.fnstart
 149              	.LVL2:
 150              	.LFB249:
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Program a half-word (16-bit) at a specified address.
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   This function must be used when the device voltage range is from
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         2.1V to 3.6V.
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   If an erase and a program operations are requested simultaneously,    
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         the erase operation is performed before the program one.
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *  
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Address specifies the address to be programmed.
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Data specifies the data to be programmed.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void FLASH_Program_HalfWord(uint32_t Address, uint16_t Data)
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 151              		.loc 1 670 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check the parameters */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   assert_param(IS_FLASH_ADDRESS(Address));
 156              		.loc 1 672 3 view .LVU31
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* If the previous operation is completed, proceed to program the new data */
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 157              		.loc 1 675 3 view .LVU32
 158 0000 074B     		ldr	r3, .L9
 159 0002 1A69     		ldr	r2, [r3, #16]
 160 0004 22F44072 		bic	r2, r2, #768
 161 0008 1A61     		str	r2, [r3, #16]
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 162              		.loc 1 676 3 view .LVU33
 163              		.loc 1 676 10 is_stmt 0 view .LVU34
 164 000a 1A69     		ldr	r2, [r3, #16]
 165              		.loc 1 676 13 view .LVU35
 166 000c 42F48072 		orr	r2, r2, #256
 167 0010 1A61     		str	r2, [r3, #16]
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_CR_PG;
 168              		.loc 1 677 3 is_stmt 1 view .LVU36
 169              		.loc 1 677 10 is_stmt 0 view .LVU37
 170 0012 1A69     		ldr	r2, [r3, #16]
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 31


 171              		.loc 1 677 13 view .LVU38
 172 0014 42F00102 		orr	r2, r2, #1
 173 0018 1A61     		str	r2, [r3, #16]
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *(__IO uint16_t*)Address = Data;
 174              		.loc 1 679 3 is_stmt 1 view .LVU39
 175              		.loc 1 679 28 is_stmt 0 view .LVU40
 176 001a 0180     		strh	r1, [r0]	@ movhi
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 177              		.loc 1 680 1 view .LVU41
 178 001c 7047     		bx	lr
 179              	.L10:
 180 001e 00BF     		.align	2
 181              	.L9:
 182 0020 003C0240 		.word	1073888256
 183              		.cfi_endproc
 184              	.LFE249:
 185              		.cantunwind
 186              		.fnend
 188              		.section	.text._ZL18FLASH_Program_Bytemh,"ax",%progbits
 189              		.align	1
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	_ZL18FLASH_Program_Bytemh:
 195              		.fnstart
 196              	.LVL3:
 197              	.LFB250:
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Program byte (8-bit) at a specified address.
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   This function must be used when the device voltage range is from
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         1.8V to 3.6V.
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @note   If an erase and a program operations are requested simultaneously,    
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *         the erase operation is performed before the program one.
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *  
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Address specifies the address to be programmed.
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @param  Data specifies the data to be programmed.
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void FLASH_Program_Byte(uint32_t Address, uint8_t Data)
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** {
 198              		.loc 1 695 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Check the parameters */
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   assert_param(IS_FLASH_ADDRESS(Address));
 203              		.loc 1 697 3 view .LVU43
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* If the previous operation is completed, proceed to program the new data */
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 204              		.loc 1 700 3 view .LVU44
 205 0000 064B     		ldr	r3, .L12
 206 0002 1A69     		ldr	r2, [r3, #16]
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 32


 207 0004 22F44072 		bic	r2, r2, #768
 208 0008 1A61     		str	r2, [r3, #16]
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_PSIZE_BYTE;
 209              		.loc 1 701 3 view .LVU45
 210              		.loc 1 701 10 is_stmt 0 view .LVU46
 211 000a 1A69     		ldr	r2, [r3, #16]
 212              		.loc 1 701 13 view .LVU47
 213 000c 1A61     		str	r2, [r3, #16]
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   FLASH->CR |= FLASH_CR_PG;
 214              		.loc 1 702 3 is_stmt 1 view .LVU48
 215              		.loc 1 702 10 is_stmt 0 view .LVU49
 216 000e 1A69     		ldr	r2, [r3, #16]
 217              		.loc 1 702 13 view .LVU50
 218 0010 42F00102 		orr	r2, r2, #1
 219 0014 1A61     		str	r2, [r3, #16]
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   *(__IO uint8_t*)Address = Data;
 220              		.loc 1 704 3 is_stmt 1 view .LVU51
 221              		.loc 1 704 27 is_stmt 0 view .LVU52
 222 0016 0170     		strb	r1, [r0]
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 223              		.loc 1 705 1 view .LVU53
 224 0018 7047     		bx	lr
 225              	.L13:
 226 001a 00BF     		.align	2
 227              	.L12:
 228 001c 003C0240 		.word	1073888256
 229              		.cfi_endproc
 230              	.LFE250:
 231              		.cantunwind
 232              		.fnend
 234              		.section	.text._ZL18FLASH_SetErrorCodev,"ax",%progbits
 235              		.align	1
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	_ZL18FLASH_SetErrorCodev:
 241              		.fnstart
 242              	.LFB251:
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** /**
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @brief  Set the specific FLASH error flag.
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   * @retval None
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   */
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** static void FLASH_SetErrorCode(void)
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** { 
 243              		.loc 1 712 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 248              		.loc 1 713 3 view .LVU55
 249              		.loc 1 713 6 is_stmt 0 view .LVU56
 250 0000 274B     		ldr	r3, .L21
 251 0002 DB68     		ldr	r3, [r3, #12]
 252              		.loc 1 713 3 view .LVU57
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 33


 253 0004 13F0100F 		tst	r3, #16
 254 0008 07D0     		beq	.L15
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 255              		.loc 1 715 4 is_stmt 1 view .LVU58
 256              		.loc 1 715 11 is_stmt 0 view .LVU59
 257 000a 264A     		ldr	r2, .L21+4
 258 000c D369     		ldr	r3, [r2, #28]
 259              		.loc 1 715 21 view .LVU60
 260 000e 43F01003 		orr	r3, r3, #16
 261 0012 D361     		str	r3, [r2, #28]
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    /* Clear FLASH write protection error pending bit */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 262              		.loc 1 718 4 is_stmt 1 view .LVU61
 263 0014 224B     		ldr	r3, .L21
 264 0016 1022     		movs	r2, #16
 265 0018 DA60     		str	r2, [r3, #12]
 266              	.L15:
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 267              		.loc 1 721 3 view .LVU62
 268              		.loc 1 721 6 is_stmt 0 view .LVU63
 269 001a 214B     		ldr	r3, .L21
 270 001c DB68     		ldr	r3, [r3, #12]
 271              		.loc 1 721 3 view .LVU64
 272 001e 13F0200F 		tst	r3, #32
 273 0022 07D0     		beq	.L16
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 274              		.loc 1 723 4 is_stmt 1 view .LVU65
 275              		.loc 1 723 11 is_stmt 0 view .LVU66
 276 0024 1F4A     		ldr	r2, .L21+4
 277 0026 D369     		ldr	r3, [r2, #28]
 278              		.loc 1 723 21 view .LVU67
 279 0028 43F00803 		orr	r3, r3, #8
 280 002c D361     		str	r3, [r2, #28]
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    /* Clear FLASH Programming alignment error pending bit */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 281              		.loc 1 726 4 is_stmt 1 view .LVU68
 282 002e 1C4B     		ldr	r3, .L21
 283 0030 2022     		movs	r2, #32
 284 0032 DA60     		str	r2, [r3, #12]
 285              	.L16:
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 286              		.loc 1 729 3 view .LVU69
 287              		.loc 1 729 6 is_stmt 0 view .LVU70
 288 0034 1A4B     		ldr	r3, .L21
 289 0036 DB68     		ldr	r3, [r3, #12]
 290              		.loc 1 729 3 view .LVU71
 291 0038 13F0400F 		tst	r3, #64
 292 003c 07D0     		beq	.L17
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 34


 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 293              		.loc 1 731 5 is_stmt 1 view .LVU72
 294              		.loc 1 731 12 is_stmt 0 view .LVU73
 295 003e 194A     		ldr	r2, .L21+4
 296 0040 D369     		ldr	r3, [r2, #28]
 297              		.loc 1 731 22 view .LVU74
 298 0042 43F00403 		orr	r3, r3, #4
 299 0046 D361     		str	r3, [r2, #28]
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Clear FLASH Programming parallelism error pending bit */
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 300              		.loc 1 734 5 is_stmt 1 view .LVU75
 301 0048 154B     		ldr	r3, .L21
 302 004a 4022     		movs	r2, #64
 303 004c DA60     		str	r2, [r3, #12]
 304              	.L17:
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 305              		.loc 1 737 3 view .LVU76
 306              		.loc 1 737 6 is_stmt 0 view .LVU77
 307 004e 144B     		ldr	r3, .L21
 308 0050 DB68     		ldr	r3, [r3, #12]
 309              		.loc 1 737 3 view .LVU78
 310 0052 13F0800F 		tst	r3, #128
 311 0056 07D0     		beq	.L18
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 312              		.loc 1 739 5 is_stmt 1 view .LVU79
 313              		.loc 1 739 12 is_stmt 0 view .LVU80
 314 0058 124A     		ldr	r2, .L21+4
 315 005a D369     		ldr	r3, [r2, #28]
 316              		.loc 1 739 22 view .LVU81
 317 005c 43F00203 		orr	r3, r3, #2
 318 0060 D361     		str	r3, [r2, #28]
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Clear FLASH Programming sequence error pending bit */
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 319              		.loc 1 742 5 is_stmt 1 view .LVU82
 320 0062 0F4B     		ldr	r3, .L21
 321 0064 8022     		movs	r2, #128
 322 0066 DA60     		str	r2, [r3, #12]
 323              	.L18:
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #if defined(FLASH_SR_RDERR) 
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 324              		.loc 1 745 3 view .LVU83
 325              		.loc 1 745 6 is_stmt 0 view .LVU84
 326 0068 0D4B     		ldr	r3, .L21
 327 006a DB68     		ldr	r3, [r3, #12]
 328              		.loc 1 745 3 view .LVU85
 329 006c 13F4807F 		tst	r3, #256
 330 0070 08D0     		beq	.L19
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 331              		.loc 1 747 5 is_stmt 1 view .LVU86
 332              		.loc 1 747 12 is_stmt 0 view .LVU87
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 35


 333 0072 0C4A     		ldr	r2, .L21+4
 334 0074 D369     		ldr	r3, [r2, #28]
 335              		.loc 1 747 22 view .LVU88
 336 0076 43F00103 		orr	r3, r3, #1
 337 007a D361     		str	r3, [r2, #28]
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Clear FLASH Proprietary readout protection error pending bit */
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 338              		.loc 1 750 5 is_stmt 1 view .LVU89
 339 007c 084B     		ldr	r3, .L21
 340 007e 4FF48072 		mov	r2, #256
 341 0082 DA60     		str	r2, [r3, #12]
 342              	.L19:
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** #endif /* FLASH_SR_RDERR */  
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 343              		.loc 1 753 3 view .LVU90
 344              		.loc 1 753 6 is_stmt 0 view .LVU91
 345 0084 064B     		ldr	r3, .L21
 346 0086 DB68     		ldr	r3, [r3, #12]
 347              		.loc 1 753 3 view .LVU92
 348 0088 13F0020F 		tst	r3, #2
 349 008c 07D0     		beq	.L14
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 350              		.loc 1 755 5 is_stmt 1 view .LVU93
 351              		.loc 1 755 12 is_stmt 0 view .LVU94
 352 008e 054A     		ldr	r2, .L21+4
 353 0090 D369     		ldr	r3, [r2, #28]
 354              		.loc 1 755 22 view .LVU95
 355 0092 43F02003 		orr	r3, r3, #32
 356 0096 D361     		str	r3, [r2, #28]
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     /* Clear FLASH Operation error pending bit */
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 357              		.loc 1 758 5 is_stmt 1 view .LVU96
 358 0098 014B     		ldr	r3, .L21
 359 009a 0222     		movs	r2, #2
 360 009c DA60     		str	r2, [r3, #12]
 361              	.L14:
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 362              		.loc 1 760 1 is_stmt 0 view .LVU97
 363 009e 7047     		bx	lr
 364              	.L22:
 365              		.align	2
 366              	.L21:
 367 00a0 003C0240 		.word	1073888256
 368 00a4 00000000 		.word	pFlash
 369              		.cfi_endproc
 370              	.LFE251:
 371              		.cantunwind
 372              		.fnend
 374              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 375              		.align	1
 376              		.global	HAL_FLASH_Program_IT
 377              		.syntax unified
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 36


 378              		.thumb
 379              		.thumb_func
 381              	HAL_FLASH_Program_IT:
 382              		.fnstart
 383              	.LVL4:
 384              	.LFB236:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_OK;
 385              		.loc 1 213 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_OK;
 389              		.loc 1 213 1 is_stmt 0 view .LVU99
 390 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 391              	.LCFI2:
 392              		.cfi_def_cfa_offset 24
 393              		.cfi_offset 3, -24
 394              		.cfi_offset 4, -20
 395              		.cfi_offset 5, -16
 396              		.cfi_offset 6, -12
 397              		.cfi_offset 7, -8
 398              		.cfi_offset 14, -4
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 399              		.loc 1 214 3 is_stmt 1 view .LVU100
 400              	.LVL5:
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 401              		.loc 1 217 3 view .LVU101
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 402              		.loc 1 217 3 view .LVU102
 403 0002 174D     		ldr	r5, .L33
 404 0004 2D7E     		ldrb	r5, [r5, #24]	@ zero_extendqisi2
 405 0006 012D     		cmp	r5, #1
 406 0008 28D0     		beq	.L28
 407 000a 0446     		mov	r4, r0
 408 000c 0846     		mov	r0, r1
 409              	.LVL6:
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 410              		.loc 1 217 3 discriminator 2 view .LVU103
 411 000e 144E     		ldr	r6, .L33
 412 0010 0121     		movs	r1, #1
 413              	.LVL7:
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 414              		.loc 1 217 3 is_stmt 0 discriminator 2 view .LVU104
 415 0012 3176     		strb	r1, [r6, #24]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 416              		.loc 1 217 3 is_stmt 1 discriminator 2 view .LVU105
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 417              		.loc 1 220 3 discriminator 2 view .LVU106
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 418              		.loc 1 223 3 discriminator 2 view .LVU107
 419 0014 134D     		ldr	r5, .L33+4
 420 0016 2F69     		ldr	r7, [r5, #16]
 421 0018 47F08077 		orr	r7, r7, #16777216
 422 001c 2F61     		str	r7, [r5, #16]
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 423              		.loc 1 226 3 discriminator 2 view .LVU108
 424 001e 2F69     		ldr	r7, [r5, #16]
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 37


 425 0020 47F00077 		orr	r7, r7, #33554432
 426 0024 2F61     		str	r7, [r5, #16]
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   pFlash.Address = Address;
 427              		.loc 1 228 3 discriminator 2 view .LVU109
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   pFlash.Address = Address;
 428              		.loc 1 228 27 is_stmt 0 discriminator 2 view .LVU110
 429 0026 0321     		movs	r1, #3
 430 0028 3170     		strb	r1, [r6]
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 431              		.loc 1 229 3 is_stmt 1 discriminator 2 view .LVU111
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 432              		.loc 1 229 18 is_stmt 0 discriminator 2 view .LVU112
 433 002a 7061     		str	r0, [r6, #20]
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 434              		.loc 1 231 3 is_stmt 1 discriminator 2 view .LVU113
 435 002c 3CB1     		cbz	r4, .L30
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 436              		.loc 1 236 8 view .LVU114
 437 002e 012C     		cmp	r4, #1
 438 0030 0AD0     		beq	.L31
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 439              		.loc 1 241 8 view .LVU115
 440 0032 022C     		cmp	r4, #2
 441 0034 0DD0     		beq	.L32
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 442              		.loc 1 249 5 view .LVU116
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 443              		.loc 1 249 29 is_stmt 0 view .LVU117
 444 0036 FFF7FEFF 		bl	_ZL24FLASH_Program_DoubleWordmy
 445              	.LVL8:
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 446              		.loc 1 252 10 view .LVU118
 447 003a 0020     		movs	r0, #0
 448              	.LVL9:
 449              	.L24:
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 450              		.loc 1 253 1 view .LVU119
 451 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 452              	.LVL10:
 453              	.L30:
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 454              		.loc 1 234 7 is_stmt 1 view .LVU120
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 455              		.loc 1 234 25 is_stmt 0 view .LVU121
 456 003e D1B2     		uxtb	r1, r2
 457 0040 FFF7FEFF 		bl	_ZL18FLASH_Program_Bytemh
 458              	.LVL11:
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 459              		.loc 1 252 10 view .LVU122
 460 0044 0020     		movs	r0, #0
 461 0046 F9E7     		b	.L24
 462              	.LVL12:
 463              	.L31:
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 464              		.loc 1 239 5 is_stmt 1 view .LVU123
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 465              		.loc 1 239 27 is_stmt 0 view .LVU124
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 38


 466 0048 91B2     		uxth	r1, r2
 467 004a FFF7FEFF 		bl	_ZL22FLASH_Program_HalfWordmt
 468              	.LVL13:
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 469              		.loc 1 252 10 view .LVU125
 470 004e 0020     		movs	r0, #0
 471 0050 F4E7     		b	.L24
 472              	.LVL14:
 473              	.L32:
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 474              		.loc 1 244 5 is_stmt 1 view .LVU126
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 475              		.loc 1 244 23 is_stmt 0 view .LVU127
 476 0052 1146     		mov	r1, r2
 477 0054 FFF7FEFF 		bl	_ZL18FLASH_Program_Wordmm
 478              	.LVL15:
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 479              		.loc 1 252 10 view .LVU128
 480 0058 0020     		movs	r0, #0
 481 005a EFE7     		b	.L24
 482              	.LVL16:
 483              	.L28:
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 484              		.loc 1 217 3 view .LVU129
 485 005c 0220     		movs	r0, #2
 486              	.LVL17:
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 487              		.loc 1 217 3 view .LVU130
 488 005e EDE7     		b	.L24
 489              	.L34:
 490              		.align	2
 491              	.L33:
 492 0060 00000000 		.word	pFlash
 493 0064 003C0240 		.word	1073888256
 494              		.cfi_endproc
 495              	.LFE236:
 496              		.cantunwind
 497              		.fnend
 499              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 500              		.align	1
 501              		.weak	HAL_FLASH_EndOfOperationCallback
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	HAL_FLASH_EndOfOperationCallback:
 507              		.fnstart
 508              	.LVL18:
 509              	.LFB238:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Prevent unused argument(s) compilation warning */
 510              		.loc 1 383 1 is_stmt 1 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* NOTE : This function Should not be modified, when the callback is needed,
 515              		.loc 1 385 3 view .LVU132
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 39


 516              		.loc 1 389 1 is_stmt 0 view .LVU133
 517 0000 7047     		bx	lr
 518              		.cfi_endproc
 519              	.LFE238:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 524              		.align	1
 525              		.weak	HAL_FLASH_OperationErrorCallback
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	HAL_FLASH_OperationErrorCallback:
 531              		.fnstart
 532              	.LVL19:
 533              	.LFB239:
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Prevent unused argument(s) compilation warning */
 534              		.loc 1 400 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* NOTE : This function Should not be modified, when the callback is needed,
 539              		.loc 1 402 3 view .LVU135
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 540              		.loc 1 406 1 is_stmt 0 view .LVU136
 541 0000 7047     		bx	lr
 542              		.cfi_endproc
 543              	.LFE239:
 544              		.cantunwind
 545              		.fnend
 547              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 548              		.align	1
 549              		.global	HAL_FLASH_IRQHandler
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 554              	HAL_FLASH_IRQHandler:
 555              		.fnstart
 556              	.LFB237:
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   uint32_t addresstmp = 0U;
 557              		.loc 1 260 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561 0000 10B5     		push	{r4, lr}
 562              		.save {r4, lr}
 563              	.LCFI3:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 4, -8
 566              		.cfi_offset 14, -4
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 567              		.loc 1 261 3 view .LVU138
 568              	.LVL20:
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 569              		.loc 1 265 3 view .LVU139
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 40


 570              		.loc 1 265 6 is_stmt 0 view .LVU140
 571 0002 3A4B     		ldr	r3, .L53
 572 0004 DB68     		ldr	r3, [r3, #12]
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 573              		.loc 1 265 3 view .LVU141
 574 0006 13F4F97F 		tst	r3, #498
 575 000a 13D0     		beq	.L38
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 576              		.loc 1 272 5 is_stmt 1 view .LVU142
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 577              		.loc 1 272 15 is_stmt 0 view .LVU143
 578 000c 384B     		ldr	r3, .L53+4
 579 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 580 0010 DBB2     		uxtb	r3, r3
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 581              		.loc 1 272 5 view .LVU144
 582 0012 012B     		cmp	r3, #1
 583 0014 3BD0     		beq	.L49
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 584              		.loc 1 278 10 is_stmt 1 view .LVU145
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 585              		.loc 1 278 20 is_stmt 0 view .LVU146
 586 0016 364B     		ldr	r3, .L53+4
 587 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 001a DBB2     		uxtb	r3, r3
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 589              		.loc 1 278 10 view .LVU147
 590 001c 022B     		cmp	r3, #2
 591 001e 3CD0     		beq	.L50
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 592              		.loc 1 286 7 is_stmt 1 view .LVU148
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 593              		.loc 1 286 18 is_stmt 0 view .LVU149
 594 0020 334B     		ldr	r3, .L53+4
 595 0022 5C69     		ldr	r4, [r3, #20]
 596              	.LVL21:
 597              	.L40:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 598              		.loc 1 290 5 is_stmt 1 view .LVU150
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 599              		.loc 1 290 23 is_stmt 0 view .LVU151
 600 0024 FFF7FEFF 		bl	_ZL18FLASH_SetErrorCodev
 601              	.LVL22:
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 602              		.loc 1 293 5 is_stmt 1 view .LVU152
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 603              		.loc 1 293 37 is_stmt 0 view .LVU153
 604 0028 2046     		mov	r0, r4
 605 002a FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 606              	.LVL23:
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 607              		.loc 1 296 5 is_stmt 1 view .LVU154
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 608              		.loc 1 296 29 is_stmt 0 view .LVU155
 609 002e 304B     		ldr	r3, .L53+4
 610 0030 0022     		movs	r2, #0
 611 0032 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 41


 612              	.LVL24:
 613              	.L38:
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 614              		.loc 1 300 3 is_stmt 1 view .LVU156
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 615              		.loc 1 300 6 is_stmt 0 view .LVU157
 616 0034 2D4B     		ldr	r3, .L53
 617 0036 DB68     		ldr	r3, [r3, #12]
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 618              		.loc 1 300 3 view .LVU158
 619 0038 13F0010F 		tst	r3, #1
 620 003c 13D0     		beq	.L42
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 621              		.loc 1 303 5 is_stmt 1 view .LVU159
 622 003e 2B4B     		ldr	r3, .L53
 623 0040 0122     		movs	r2, #1
 624 0042 DA60     		str	r2, [r3, #12]
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 625              		.loc 1 305 5 view .LVU160
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 626              		.loc 1 305 15 is_stmt 0 view .LVU161
 627 0044 2A4B     		ldr	r3, .L53+4
 628 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 629 0048 DBB2     		uxtb	r3, r3
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 630              		.loc 1 305 5 view .LVU162
 631 004a 9342     		cmp	r3, r2
 632 004c 28D0     		beq	.L51
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 633              		.loc 1 338 7 is_stmt 1 view .LVU163
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 634              		.loc 1 338 17 is_stmt 0 view .LVU164
 635 004e 284B     		ldr	r3, .L53+4
 636 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 637 0052 DBB2     		uxtb	r3, r3
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 638              		.loc 1 338 7 view .LVU165
 639 0054 022B     		cmp	r3, #2
 640 0056 41D0     		beq	.L52
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 641              		.loc 1 351 9 is_stmt 1 view .LVU166
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 642              		.loc 1 351 49 is_stmt 0 view .LVU167
 643 0058 254B     		ldr	r3, .L53+4
 644 005a 5869     		ldr	r0, [r3, #20]
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 645              		.loc 1 351 41 view .LVU168
 646 005c FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 647              	.LVL25:
 648              	.L46:
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 649              		.loc 1 353 7 is_stmt 1 view .LVU169
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 650              		.loc 1 353 31 is_stmt 0 view .LVU170
 651 0060 234B     		ldr	r3, .L53+4
 652 0062 0022     		movs	r2, #0
 653 0064 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 42


 654              	.L42:
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 655              		.loc 1 357 3 is_stmt 1 view .LVU171
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 656              		.loc 1 357 13 is_stmt 0 view .LVU172
 657 0066 224B     		ldr	r3, .L53+4
 658 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 659              		.loc 1 357 3 view .LVU173
 660 006a 7BB9     		cbnz	r3, .L37
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 661              		.loc 1 360 5 is_stmt 1 view .LVU174
 662 006c 1F4B     		ldr	r3, .L53
 663 006e 1A69     		ldr	r2, [r3, #16]
 664 0070 22F0FF02 		bic	r2, r2, #255
 665 0074 1A61     		str	r2, [r3, #16]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 666              		.loc 1 363 5 view .LVU175
 667 0076 1A69     		ldr	r2, [r3, #16]
 668 0078 22F08072 		bic	r2, r2, #16777216
 669 007c 1A61     		str	r2, [r3, #16]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 670              		.loc 1 366 5 view .LVU176
 671 007e 1A69     		ldr	r2, [r3, #16]
 672 0080 22F00072 		bic	r2, r2, #33554432
 673 0084 1A61     		str	r2, [r3, #16]
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 674              		.loc 1 369 5 view .LVU177
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 675              		.loc 1 369 5 view .LVU178
 676 0086 1A4B     		ldr	r3, .L53+4
 677 0088 0022     		movs	r2, #0
 678 008a 1A76     		strb	r2, [r3, #24]
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 679              		.loc 1 369 5 view .LVU179
 680              	.L37:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 681              		.loc 1 371 1 is_stmt 0 view .LVU180
 682 008c 10BD     		pop	{r4, pc}
 683              	.LVL26:
 684              	.L49:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       pFlash.Sector = 0xFFFFFFFFU;
 685              		.loc 1 275 7 is_stmt 1 view .LVU181
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       pFlash.Sector = 0xFFFFFFFFU;
 686              		.loc 1 275 18 is_stmt 0 view .LVU182
 687 008e 184B     		ldr	r3, .L53+4
 688 0090 DC68     		ldr	r4, [r3, #12]
 689              	.LVL27:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 690              		.loc 1 276 7 is_stmt 1 view .LVU183
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 691              		.loc 1 276 21 is_stmt 0 view .LVU184
 692 0092 4FF0FF32 		mov	r2, #-1
 693 0096 DA60     		str	r2, [r3, #12]
 694 0098 C4E7     		b	.L40
 695              	.LVL28:
 696              	.L50:
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 43


 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 697              		.loc 1 281 7 is_stmt 1 view .LVU185
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 698              		.loc 1 281 18 is_stmt 0 view .LVU186
 699 009a 154B     		ldr	r3, .L53+4
 700 009c 1C69     		ldr	r4, [r3, #16]
 701              	.LVL29:
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 702              		.loc 1 281 18 view .LVU187
 703 009e C1E7     		b	.L40
 704              	.LVL30:
 705              	.L51:
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       
 706              		.loc 1 308 7 is_stmt 1 view .LVU188
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       
 707              		.loc 1 308 14 is_stmt 0 view .LVU189
 708 00a0 134B     		ldr	r3, .L53+4
 709 00a2 5A68     		ldr	r2, [r3, #4]
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       
 710              		.loc 1 308 30 view .LVU190
 711 00a4 013A     		subs	r2, r2, #1
 712 00a6 5A60     		str	r2, [r3, #4]
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 713              		.loc 1 311 7 is_stmt 1 view .LVU191
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 714              		.loc 1 311 17 is_stmt 0 view .LVU192
 715 00a8 5B68     		ldr	r3, [r3, #4]
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 716              		.loc 1 311 7 view .LVU193
 717 00aa 5BB1     		cbz	r3, .L44
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /*Indicate user which sector has been erased*/
 718              		.loc 1 313 9 is_stmt 1 view .LVU194
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         /*Indicate user which sector has been erased*/
 719              		.loc 1 313 20 is_stmt 0 view .LVU195
 720 00ac 104C     		ldr	r4, .L53+4
 721 00ae E068     		ldr	r0, [r4, #12]
 722              	.LVL31:
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         
 723              		.loc 1 315 9 is_stmt 1 view .LVU196
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         
 724              		.loc 1 315 41 is_stmt 0 view .LVU197
 725 00b0 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 726              	.LVL32:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         addresstmp = pFlash.Sector;
 727              		.loc 1 318 9 is_stmt 1 view .LVU198
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         addresstmp = pFlash.Sector;
 728              		.loc 1 318 16 is_stmt 0 view .LVU199
 729 00b4 E368     		ldr	r3, [r4, #12]
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         addresstmp = pFlash.Sector;
 730              		.loc 1 318 22 view .LVU200
 731 00b6 0133     		adds	r3, r3, #1
 732 00b8 E360     		str	r3, [r4, #12]
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         FLASH_Erase_Sector(addresstmp, pFlash.VoltageForErase);
 733              		.loc 1 319 9 is_stmt 1 view .LVU201
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         FLASH_Erase_Sector(addresstmp, pFlash.VoltageForErase);
 734              		.loc 1 319 20 is_stmt 0 view .LVU202
 735 00ba E068     		ldr	r0, [r4, #12]
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 44


 736              	.LVL33:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 737              		.loc 1 320 9 is_stmt 1 view .LVU203
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 738              		.loc 1 320 47 is_stmt 0 view .LVU204
 739 00bc 217A     		ldrb	r1, [r4, #8]	@ zero_extendqisi2
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 740              		.loc 1 320 27 view .LVU205
 741 00be FFF7FEFF 		bl	FLASH_Erase_Sector
 742              	.LVL34:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 743              		.loc 1 320 27 view .LVU206
 744 00c2 D0E7     		b	.L42
 745              	.LVL35:
 746              	.L44:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 747              		.loc 1 326 9 is_stmt 1 view .LVU207
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 748              		.loc 1 326 23 is_stmt 0 view .LVU208
 749 00c4 0A4B     		ldr	r3, .L53+4
 750 00c6 4FF0FF34 		mov	r4, #-1
 751 00ca DC60     		str	r4, [r3, #12]
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         
 752              		.loc 1 327 9 is_stmt 1 view .LVU209
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****         
 753              		.loc 1 327 33 is_stmt 0 view .LVU210
 754 00cc 0022     		movs	r2, #0
 755 00ce 1A70     		strb	r2, [r3]
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                 
 756              		.loc 1 330 9 is_stmt 1 view .LVU211
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                 
 757              		.loc 1 330 26 is_stmt 0 view .LVU212
 758 00d0 FFF7FEFF 		bl	FLASH_FlushCaches
 759              	.LVL36:
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 760              		.loc 1 333 9 is_stmt 1 view .LVU213
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 761              		.loc 1 333 41 is_stmt 0 view .LVU214
 762 00d4 2046     		mov	r0, r4
 763 00d6 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 764              	.LVL37:
 765 00da C4E7     		b	.L42
 766              	.LVL38:
 767              	.L52:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 768              		.loc 1 342 9 is_stmt 1 view .LVU215
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 769              		.loc 1 342 26 is_stmt 0 view .LVU216
 770 00dc FFF7FEFF 		bl	FLASH_FlushCaches
 771              	.LVL39:
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 772              		.loc 1 345 9 is_stmt 1 view .LVU217
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 773              		.loc 1 345 49 is_stmt 0 view .LVU218
 774 00e0 034B     		ldr	r3, .L53+4
 775 00e2 1869     		ldr	r0, [r3, #16]
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 45


 776              		.loc 1 345 41 view .LVU219
 777 00e4 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 778              	.LVL40:
 779 00e8 BAE7     		b	.L46
 780              	.L54:
 781 00ea 00BF     		.align	2
 782              	.L53:
 783 00ec 003C0240 		.word	1073888256
 784 00f0 00000000 		.word	pFlash
 785              		.cfi_endproc
 786              	.LFE237:
 787              		.fnend
 789              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 790              		.align	1
 791              		.global	HAL_FLASH_Unlock
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	HAL_FLASH_Unlock:
 797              		.fnstart
 798              	.LFB240:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_OK;
 799              		.loc 1 432 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 804              		.loc 1 433 3 view .LVU221
 805              	.LVL41:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 806              		.loc 1 435 3 view .LVU222
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 807              		.loc 1 435 6 is_stmt 0 view .LVU223
 808 0000 094B     		ldr	r3, .L60
 809 0002 1B69     		ldr	r3, [r3, #16]
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 810              		.loc 1 435 3 view .LVU224
 811 0004 002B     		cmp	r3, #0
 812 0006 01DB     		blt	.L59
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 813              		.loc 1 433 21 view .LVU225
 814 0008 0020     		movs	r0, #0
 815 000a 7047     		bx	lr
 816              	.L59:
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 817              		.loc 1 438 5 is_stmt 1 view .LVU226
 818 000c 064B     		ldr	r3, .L60
 819 000e 074A     		ldr	r2, .L60+4
 820 0010 5A60     		str	r2, [r3, #4]
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 821              		.loc 1 439 5 view .LVU227
 822 0012 02F18832 		add	r2, r2, #-2004318072
 823 0016 5A60     		str	r2, [r3, #4]
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 824              		.loc 1 442 5 view .LVU228
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 46


 825              		.loc 1 442 8 is_stmt 0 view .LVU229
 826 0018 1B69     		ldr	r3, [r3, #16]
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 827              		.loc 1 442 5 view .LVU230
 828 001a 002B     		cmp	r3, #0
 829 001c 01DB     		blt	.L58
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 830              		.loc 1 433 21 view .LVU231
 831 001e 0020     		movs	r0, #0
 832 0020 7047     		bx	lr
 833              	.L58:
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 834              		.loc 1 444 14 view .LVU232
 835 0022 0120     		movs	r0, #1
 836              	.LVL42:
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 837              		.loc 1 448 3 is_stmt 1 view .LVU233
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 838              		.loc 1 449 1 is_stmt 0 view .LVU234
 839 0024 7047     		bx	lr
 840              	.L61:
 841 0026 00BF     		.align	2
 842              	.L60:
 843 0028 003C0240 		.word	1073888256
 844 002c 23016745 		.word	1164378403
 845              		.cfi_endproc
 846              	.LFE240:
 847              		.cantunwind
 848              		.fnend
 850              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 851              		.align	1
 852              		.global	HAL_FLASH_Lock
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 857              	HAL_FLASH_Lock:
 858              		.fnstart
 859              	.LFB241:
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 860              		.loc 1 456 1 is_stmt 1 view -0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 865              		.loc 1 458 3 view .LVU236
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 866              		.loc 1 458 10 is_stmt 0 view .LVU237
 867 0000 034A     		ldr	r2, .L63
 868 0002 1369     		ldr	r3, [r2, #16]
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 869              		.loc 1 458 13 view .LVU238
 870 0004 43F00043 		orr	r3, r3, #-2147483648
 871 0008 1361     		str	r3, [r2, #16]
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 872              		.loc 1 460 3 is_stmt 1 view .LVU239
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 47


 873              		.loc 1 461 1 is_stmt 0 view .LVU240
 874 000a 0020     		movs	r0, #0
 875 000c 7047     		bx	lr
 876              	.L64:
 877 000e 00BF     		.align	2
 878              	.L63:
 879 0010 003C0240 		.word	1073888256
 880              		.cfi_endproc
 881              	.LFE241:
 882              		.cantunwind
 883              		.fnend
 885              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 886              		.align	1
 887              		.global	HAL_FLASH_OB_Unlock
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 892              	HAL_FLASH_OB_Unlock:
 893              		.fnstart
 894              	.LFB242:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 895              		.loc 1 468 1 is_stmt 1 view -0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 900              		.loc 1 469 3 view .LVU242
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 901              		.loc 1 469 14 is_stmt 0 view .LVU243
 902 0000 074B     		ldr	r3, .L68
 903 0002 5B69     		ldr	r3, [r3, #20]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 904              		.loc 1 469 3 view .LVU244
 905 0004 13F0010F 		tst	r3, #1
 906 0008 07D0     		beq	.L67
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 907              		.loc 1 472 5 is_stmt 1 view .LVU245
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 908              		.loc 1 472 20 is_stmt 0 view .LVU246
 909 000a 054B     		ldr	r3, .L68
 910 000c 054A     		ldr	r2, .L68+4
 911 000e 9A60     		str	r2, [r3, #8]
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 912              		.loc 1 473 5 is_stmt 1 view .LVU247
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 913              		.loc 1 473 20 is_stmt 0 view .LVU248
 914 0010 02F14432 		add	r2, r2, #1145324612
 915 0014 9A60     		str	r2, [r3, #8]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 916              		.loc 1 480 3 is_stmt 1 view .LVU249
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 917              		.loc 1 480 10 is_stmt 0 view .LVU250
 918 0016 0020     		movs	r0, #0
 919 0018 7047     		bx	lr
 920              	.L67:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }  
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 48


 921              		.loc 1 477 12 view .LVU251
 922 001a 0120     		movs	r0, #1
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 923              		.loc 1 481 1 view .LVU252
 924 001c 7047     		bx	lr
 925              	.L69:
 926 001e 00BF     		.align	2
 927              	.L68:
 928 0020 003C0240 		.word	1073888256
 929 0024 3B2A1908 		.word	135866939
 930              		.cfi_endproc
 931              	.LFE242:
 932              		.cantunwind
 933              		.fnend
 935              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 936              		.align	1
 937              		.global	HAL_FLASH_OB_Lock
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 942              	HAL_FLASH_OB_Lock:
 943              		.fnstart
 944              	.LFB243:
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 945              		.loc 1 488 1 is_stmt 1 view -0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 950              		.loc 1 490 3 view .LVU254
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 951              		.loc 1 490 10 is_stmt 0 view .LVU255
 952 0000 034A     		ldr	r2, .L71
 953 0002 5369     		ldr	r3, [r2, #20]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 954              		.loc 1 490 16 view .LVU256
 955 0004 43F00103 		orr	r3, r3, #1
 956 0008 5361     		str	r3, [r2, #20]
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 957              		.loc 1 492 3 is_stmt 1 view .LVU257
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 958              		.loc 1 493 1 is_stmt 0 view .LVU258
 959 000a 0020     		movs	r0, #0
 960 000c 7047     		bx	lr
 961              	.L72:
 962 000e 00BF     		.align	2
 963              	.L71:
 964 0010 003C0240 		.word	1073888256
 965              		.cfi_endproc
 966              	.LFE243:
 967              		.cantunwind
 968              		.fnend
 970              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 971              		.align	1
 972              		.global	HAL_FLASH_GetError
 973              		.syntax unified
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 49


 974              		.thumb
 975              		.thumb_func
 977              	HAL_FLASH_GetError:
 978              		.fnstart
 979              	.LFB245:
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****    return pFlash.ErrorCode;
 980              		.loc 1 537 1 is_stmt 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }  
 985              		.loc 1 538 4 view .LVU260
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }  
 986              		.loc 1 538 18 is_stmt 0 view .LVU261
 987 0000 014B     		ldr	r3, .L74
 988 0002 D869     		ldr	r0, [r3, #28]
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 989              		.loc 1 539 1 view .LVU262
 990 0004 7047     		bx	lr
 991              	.L75:
 992 0006 00BF     		.align	2
 993              	.L74:
 994 0008 00000000 		.word	pFlash
 995              		.cfi_endproc
 996              	.LFE245:
 997              		.cantunwind
 998              		.fnend
 1000              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 1001              		.align	1
 1002              		.global	FLASH_WaitForLastOperation
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1007              	FLASH_WaitForLastOperation:
 1008              		.fnstart
 1009              	.LVL43:
 1010              	.LFB246:
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   uint32_t tickstart = 0U;
 1011              		.loc 1 551 1 is_stmt 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   uint32_t tickstart = 0U;
 1015              		.loc 1 551 1 is_stmt 0 view .LVU264
 1016 0000 38B5     		push	{r3, r4, r5, lr}
 1017              		.save {r3, r4, r5, lr}
 1018              	.LCFI4:
 1019              		.cfi_def_cfa_offset 16
 1020              		.cfi_offset 3, -16
 1021              		.cfi_offset 4, -12
 1022              		.cfi_offset 5, -8
 1023              		.cfi_offset 14, -4
 1024 0002 0446     		mov	r4, r0
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1025              		.loc 1 552 3 is_stmt 1 view .LVU265
 1026              	.LVL44:
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 50


 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1027              		.loc 1 555 3 view .LVU266
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1028              		.loc 1 555 20 is_stmt 0 view .LVU267
 1029 0004 144B     		ldr	r3, .L87
 1030 0006 0022     		movs	r2, #0
 1031 0008 DA61     		str	r2, [r3, #28]
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1032              		.loc 1 561 3 is_stmt 1 view .LVU268
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1033              		.loc 1 561 26 is_stmt 0 view .LVU269
 1034 000a FFF7FEFF 		bl	HAL_GetTick
 1035              	.LVL45:
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1036              		.loc 1 561 26 view .LVU270
 1037 000e 0546     		mov	r5, r0
 1038              	.LVL46:
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   { 
 1039              		.loc 1 563 3 is_stmt 1 view .LVU271
 1040              	.L78:
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   { 
 1041              		.loc 1 563 46 view .LVU272
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   { 
 1042              		.loc 1 563 9 is_stmt 0 view .LVU273
 1043 0010 124B     		ldr	r3, .L87+4
 1044 0012 DB68     		ldr	r3, [r3, #12]
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   { 
 1045              		.loc 1 563 46 view .LVU274
 1046 0014 13F4803F 		tst	r3, #65536
 1047 0018 0AD0     		beq	.L85
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 1048              		.loc 1 565 5 is_stmt 1 view .LVU275
 1049 001a B4F1FF3F 		cmp	r4, #-1
 1050 001e F7D0     		beq	.L78
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 1051              		.loc 1 567 7 view .LVU276
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 1052              		.loc 1 567 25 is_stmt 0 view .LVU277
 1053 0020 24B1     		cbz	r4, .L79
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 1054              		.loc 1 567 40 discriminator 2 view .LVU278
 1055 0022 FFF7FEFF 		bl	HAL_GetTick
 1056              	.LVL47:
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 1057              		.loc 1 567 43 discriminator 2 view .LVU279
 1058 0026 401B     		subs	r0, r0, r5
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       {
 1059              		.loc 1 567 25 discriminator 2 view .LVU280
 1060 0028 A042     		cmp	r0, r4
 1061 002a F1D9     		bls	.L78
 1062              	.L79:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 1063              		.loc 1 569 9 is_stmt 1 discriminator 3 view .LVU281
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****       }
 1064              		.loc 1 569 16 is_stmt 0 discriminator 3 view .LVU282
 1065 002c 0320     		movs	r0, #3
 1066 002e 0DE0     		b	.L80
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 51


 1067              	.L85:
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 1068              		.loc 1 575 3 is_stmt 1 view .LVU283
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 1069              		.loc 1 575 7 is_stmt 0 view .LVU284
 1070 0030 0A4B     		ldr	r3, .L87+4
 1071 0032 DB68     		ldr	r3, [r3, #12]
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 1072              		.loc 1 575 3 view .LVU285
 1073 0034 13F0010F 		tst	r3, #1
 1074 0038 02D0     		beq	.L82
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 1075              		.loc 1 578 5 is_stmt 1 view .LVU286
 1076 003a 084B     		ldr	r3, .L87+4
 1077 003c 0122     		movs	r2, #1
 1078 003e DA60     		str	r2, [r3, #12]
 1079              	.L82:
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 1080              		.loc 1 581 3 view .LVU287
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 1081              		.loc 1 581 6 is_stmt 0 view .LVU288
 1082 0040 064B     		ldr	r3, .L87+4
 1083 0042 DB68     		ldr	r3, [r3, #12]
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 1084              		.loc 1 581 3 view .LVU289
 1085 0044 13F4F97F 		tst	r3, #498
 1086 0048 01D1     		bne	.L86
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1087              		.loc 1 594 10 view .LVU290
 1088 004a 0020     		movs	r0, #0
 1089              	.L80:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1090              		.loc 1 596 1 view .LVU291
 1091 004c 38BD     		pop	{r3, r4, r5, pc}
 1092              	.LVL48:
 1093              	.L86:
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     return HAL_ERROR;
 1094              		.loc 1 589 5 is_stmt 1 view .LVU292
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     return HAL_ERROR;
 1095              		.loc 1 589 23 is_stmt 0 view .LVU293
 1096 004e FFF7FEFF 		bl	_ZL18FLASH_SetErrorCodev
 1097              	.LVL49:
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 1098              		.loc 1 590 5 is_stmt 1 view .LVU294
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 1099              		.loc 1 590 12 is_stmt 0 view .LVU295
 1100 0052 0120     		movs	r0, #1
 1101 0054 FAE7     		b	.L80
 1102              	.L88:
 1103 0056 00BF     		.align	2
 1104              	.L87:
 1105 0058 00000000 		.word	pFlash
 1106 005c 003C0240 		.word	1073888256
 1107              		.cfi_endproc
 1108              	.LFE246:
 1109              		.fnend
 1111              		.section	.text.HAL_FLASH_Program,"ax",%progbits
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 52


 1112              		.align	1
 1113              		.global	HAL_FLASH_Program
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1118              	HAL_FLASH_Program:
 1119              		.fnstart
 1120              	.LVL50:
 1121              	.LFB235:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_ERROR;
 1122              		.loc 1 155 1 is_stmt 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   HAL_StatusTypeDef status = HAL_ERROR;
 1126              		.loc 1 155 1 is_stmt 0 view .LVU297
 1127 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1128              		.save {r3, r4, r5, r6, r7, lr}
 1129              	.LCFI5:
 1130              		.cfi_def_cfa_offset 24
 1131              		.cfi_offset 3, -24
 1132              		.cfi_offset 4, -20
 1133              		.cfi_offset 5, -16
 1134              		.cfi_offset 6, -12
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 1646     		mov	r6, r2
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1138              		.loc 1 156 3 is_stmt 1 view .LVU298
 1139              	.LVL51:
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1140              		.loc 1 159 3 view .LVU299
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1141              		.loc 1 159 3 view .LVU300
 1142 0004 1B4A     		ldr	r2, .L101
 1143              	.LVL52:
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1144              		.loc 1 159 3 is_stmt 0 view .LVU301
 1145 0006 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 1146 0008 012A     		cmp	r2, #1
 1147 000a 30D0     		beq	.L96
 1148 000c 0446     		mov	r4, r0
 1149 000e 0D46     		mov	r5, r1
 1150 0010 1F46     		mov	r7, r3
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1151              		.loc 1 159 3 is_stmt 1 discriminator 2 view .LVU302
 1152 0012 184B     		ldr	r3, .L101
 1153 0014 0122     		movs	r2, #1
 1154 0016 1A76     		strb	r2, [r3, #24]
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1155              		.loc 1 159 3 discriminator 2 view .LVU303
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1156              		.loc 1 162 3 discriminator 2 view .LVU304
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1157              		.loc 1 165 3 discriminator 2 view .LVU305
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1158              		.loc 1 165 38 is_stmt 0 discriminator 2 view .LVU306
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 53


 1159 0018 4CF25030 		movw	r0, #50000
 1160              	.LVL53:
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1161              		.loc 1 165 38 discriminator 2 view .LVU307
 1162 001c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1163              	.LVL54:
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   {
 1164              		.loc 1 167 3 is_stmt 1 discriminator 2 view .LVU308
 1165 0020 90B9     		cbnz	r0, .L91
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 1166              		.loc 1 169 5 view .LVU309
 1167 0022 ACB1     		cbz	r4, .L98
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 1168              		.loc 1 174 10 view .LVU310
 1169 0024 012C     		cmp	r4, #1
 1170 0026 18D0     		beq	.L99
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     {
 1171              		.loc 1 179 10 view .LVU311
 1172 0028 022C     		cmp	r4, #2
 1173 002a 1BD0     		beq	.L100
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1174              		.loc 1 187 7 view .LVU312
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1175              		.loc 1 187 31 is_stmt 0 view .LVU313
 1176 002c 3246     		mov	r2, r6
 1177 002e 3B46     		mov	r3, r7
 1178 0030 2846     		mov	r0, r5
 1179              	.LVL55:
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1180              		.loc 1 187 31 view .LVU314
 1181 0032 FFF7FEFF 		bl	_ZL24FLASH_Program_DoubleWordmy
 1182              	.LVL56:
 1183              	.L93:
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 1184              		.loc 1 191 5 is_stmt 1 view .LVU315
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     
 1185              		.loc 1 191 40 is_stmt 0 view .LVU316
 1186 0036 4CF25030 		movw	r0, #50000
 1187 003a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1188              	.LVL57:
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 1189              		.loc 1 194 5 is_stmt 1 view .LVU317
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 1190              		.loc 1 194 12 is_stmt 0 view .LVU318
 1191 003e 0E4A     		ldr	r2, .L101+4
 1192 0040 1369     		ldr	r3, [r2, #16]
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   }
 1193              		.loc 1 194 15 view .LVU319
 1194 0042 23F00103 		bic	r3, r3, #1
 1195 0046 1361     		str	r3, [r2, #16]
 1196              	.L91:
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1197              		.loc 1 198 3 is_stmt 1 view .LVU320
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1198              		.loc 1 198 3 view .LVU321
 1199 0048 0A4B     		ldr	r3, .L101
 1200 004a 0022     		movs	r2, #0
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 54


 1201 004c 1A76     		strb	r2, [r3, #24]
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1202              		.loc 1 198 3 view .LVU322
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 1203              		.loc 1 200 3 view .LVU323
 1204              	.LVL58:
 1205              	.L90:
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1206              		.loc 1 201 1 is_stmt 0 view .LVU324
 1207 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1208              	.LVL59:
 1209              	.L98:
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1210              		.loc 1 172 7 is_stmt 1 view .LVU325
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1211              		.loc 1 172 25 is_stmt 0 view .LVU326
 1212 0050 F1B2     		uxtb	r1, r6
 1213 0052 2846     		mov	r0, r5
 1214              	.LVL60:
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1215              		.loc 1 172 25 view .LVU327
 1216 0054 FFF7FEFF 		bl	_ZL18FLASH_Program_Bytemh
 1217              	.LVL61:
 1218 0058 EDE7     		b	.L93
 1219              	.LVL62:
 1220              	.L99:
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1221              		.loc 1 177 7 is_stmt 1 view .LVU328
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1222              		.loc 1 177 29 is_stmt 0 view .LVU329
 1223 005a B1B2     		uxth	r1, r6
 1224 005c 2846     		mov	r0, r5
 1225              	.LVL63:
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1226              		.loc 1 177 29 view .LVU330
 1227 005e FFF7FEFF 		bl	_ZL22FLASH_Program_HalfWordmt
 1228              	.LVL64:
 1229 0062 E8E7     		b	.L93
 1230              	.LVL65:
 1231              	.L100:
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1232              		.loc 1 182 7 is_stmt 1 view .LVU331
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1233              		.loc 1 182 25 is_stmt 0 view .LVU332
 1234 0064 3146     		mov	r1, r6
 1235 0066 2846     		mov	r0, r5
 1236              	.LVL66:
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****     }
 1237              		.loc 1 182 25 view .LVU333
 1238 0068 FFF7FEFF 		bl	_ZL18FLASH_Program_Wordmm
 1239              	.LVL67:
 1240 006c E3E7     		b	.L93
 1241              	.LVL68:
 1242              	.L96:
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1243              		.loc 1 159 3 view .LVU334
 1244 006e 0220     		movs	r0, #2
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 55


 1245              	.LVL69:
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   
 1246              		.loc 1 159 3 view .LVU335
 1247 0070 EDE7     		b	.L90
 1248              	.L102:
 1249 0072 00BF     		.align	2
 1250              	.L101:
 1251 0074 00000000 		.word	pFlash
 1252 0078 003C0240 		.word	1073888256
 1253              		.cfi_endproc
 1254              	.LFE235:
 1255              		.fnend
 1257              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 1258              		.align	1
 1259              		.global	HAL_FLASH_OB_Launch
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	HAL_FLASH_OB_Launch:
 1265              		.fnstart
 1266              	.LFB244:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp ****   /* Set the OPTSTRT bit in OPTCR register */
 1267              		.loc 1 500 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 08B5     		push	{r3, lr}
 1272              		.save {r3, lr}
 1273              	.LCFI6:
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 3, -8
 1276              		.cfi_offset 14, -4
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1277              		.loc 1 502 3 view .LVU337
 1278 0002 054A     		ldr	r2, .L105
 1279 0004 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1280              		.loc 1 502 40 is_stmt 0 view .LVU338
 1281 0006 43F00203 		orr	r3, r3, #2
 1282 000a 1375     		strb	r3, [r2, #20]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 1283              		.loc 1 505 3 is_stmt 1 view .LVU339
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** }
 1284              		.loc 1 505 36 is_stmt 0 view .LVU340
 1285 000c 4CF25030 		movw	r0, #50000
 1286 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1287              	.LVL70:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.cpp **** 
 1288              		.loc 1 506 1 view .LVU341
 1289 0014 08BD     		pop	{r3, pc}
 1290              	.L106:
 1291 0016 00BF     		.align	2
 1292              	.L105:
 1293 0018 003C0240 		.word	1073888256
 1294              		.cfi_endproc
 1295              	.LFE244:
 1296              		.fnend
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 56


 1298              		.global	pFlash
 1299              		.section	.bss.pFlash,"aw",%nobits
 1300              		.align	2
 1303              	pFlash:
 1304 0000 00000000 		.space	32
 1304      00000000 
 1304      00000000 
 1304      00000000 
 1304      00000000 
 1305              		.text
 1306              	.Letext0:
 1307              		.file 3 "c:\\users\\huawei\\desktop\\workspace\\stm32\\vs code tools\\arm-gnu-toolchain-12.2.rel1-
 1308              		.file 4 "c:\\users\\huawei\\desktop\\workspace\\stm32\\vs code tools\\arm-gnu-toolchain-12.2.rel1-
 1309              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1310              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1311              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1312              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h"
 1313              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1314              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h"
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_flash.cpp
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:21     .text._ZL24FLASH_Program_DoubleWordmy:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:26     .text._ZL24FLASH_Program_DoubleWordmy:00000000 _ZL24FLASH_Program_DoubleWordmy
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:88     .text._ZL24FLASH_Program_DoubleWordmy:0000002c $d
.ARM.exidx.text._ZL24FLASH_Program_DoubleWordmy:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:95     .text._ZL18FLASH_Program_Wordmm:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:100    .text._ZL18FLASH_Program_Wordmm:00000000 _ZL18FLASH_Program_Wordmm
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:135    .text._ZL18FLASH_Program_Wordmm:00000020 $d
.ARM.exidx.text._ZL18FLASH_Program_Wordmm:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:142    .text._ZL22FLASH_Program_HalfWordmt:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:147    .text._ZL22FLASH_Program_HalfWordmt:00000000 _ZL22FLASH_Program_HalfWordmt
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:182    .text._ZL22FLASH_Program_HalfWordmt:00000020 $d
.ARM.exidx.text._ZL22FLASH_Program_HalfWordmt:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:189    .text._ZL18FLASH_Program_Bytemh:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:194    .text._ZL18FLASH_Program_Bytemh:00000000 _ZL18FLASH_Program_Bytemh
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:228    .text._ZL18FLASH_Program_Bytemh:0000001c $d
.ARM.exidx.text._ZL18FLASH_Program_Bytemh:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:235    .text._ZL18FLASH_SetErrorCodev:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:240    .text._ZL18FLASH_SetErrorCodev:00000000 _ZL18FLASH_SetErrorCodev
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:367    .text._ZL18FLASH_SetErrorCodev:000000a0 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1303   .bss.pFlash:00000000 pFlash
.ARM.exidx.text._ZL18FLASH_SetErrorCodev:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:375    .text.HAL_FLASH_Program_IT:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:381    .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:492    .text.HAL_FLASH_Program_IT:00000060 $d
.ARM.exidx.text.HAL_FLASH_Program_IT:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:500    .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:506    .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:524    .text.HAL_FLASH_OperationErrorCallback:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:530    .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
.ARM.exidx.text.HAL_FLASH_OperationErrorCallback:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:548    .text.HAL_FLASH_IRQHandler:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:554    .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:783    .text.HAL_FLASH_IRQHandler:000000ec $d
.ARM.exidx.text.HAL_FLASH_IRQHandler:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:790    .text.HAL_FLASH_Unlock:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:796    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:843    .text.HAL_FLASH_Unlock:00000028 $d
 .ARM.exidx.text.HAL_FLASH_Unlock:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:851    .text.HAL_FLASH_Lock:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:857    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:879    .text.HAL_FLASH_Lock:00000010 $d
   .ARM.exidx.text.HAL_FLASH_Lock:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:886    .text.HAL_FLASH_OB_Unlock:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:892    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:928    .text.HAL_FLASH_OB_Unlock:00000020 $d
.ARM.exidx.text.HAL_FLASH_OB_Unlock:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:936    .text.HAL_FLASH_OB_Lock:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:942    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:964    .text.HAL_FLASH_OB_Lock:00000010 $d
.ARM.exidx.text.HAL_FLASH_OB_Lock:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:971    .text.HAL_FLASH_GetError:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:977    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:994    .text.HAL_FLASH_GetError:00000008 $d
.ARM.exidx.text.HAL_FLASH_GetError:00000000 $d
ARM GAS  C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s 			page 58


C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1001   .text.FLASH_WaitForLastOperation:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1007   .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1105   .text.FLASH_WaitForLastOperation:00000058 $d
.ARM.exidx.text.FLASH_WaitForLastOperation:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1112   .text.HAL_FLASH_Program:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1118   .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1251   .text.HAL_FLASH_Program:00000074 $d
.ARM.exidx.text.HAL_FLASH_Program:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1258   .text.HAL_FLASH_OB_Launch:00000000 $t
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1264   .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1293   .text.HAL_FLASH_OB_Launch:00000018 $d
.ARM.extab.text.HAL_FLASH_OB_Launch:00000000 $d
.ARM.exidx.text.HAL_FLASH_OB_Launch:00000000 $d
C:\Users\huawei\AppData\Local\Temp\ccySKmhd.s:1300   .bss.pFlash:00000000 $d

UNDEFINED SYMBOLS
FLASH_Erase_Sector
FLASH_FlushCaches
__aeabi_unwind_cpp_pr0
HAL_GetTick
__aeabi_unwind_cpp_pr1
